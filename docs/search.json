[{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"load-package-and-demo-dataset","dir":"Articles","previous_headings":"","what":"Load package and demo dataset","title":"tikatuwq: basic workflow","text":"","code":"library(tikatuwq)  # Try to make wq_demo available even when the package # cannot be temporarily reinstalled during pkgdown build. ok <- FALSE try({   utils::data(\"wq_demo\", package = \"tikatuwq\", envir = environment())   ok <- exists(\"wq_demo\", inherits = FALSE) }, silent = TRUE)  if (!ok) {   # Fallback: read example CSV shipped with the package   csv <- system.file(\"extdata\", \"exemplo_chamagunga.csv\", package = \"tikatuwq\")   if (nzchar(csv)) {     wq_demo <- read_wq(csv)     ok <- TRUE   } }  if (!ok) {   # Last resort: small synthetic dataset (schema-compatible)   set.seed(1)   wq_demo <- data.frame(     data = as.Date(\"2025-01-01\") + 0:9,     rio = \"Demo\",     ponto = paste0(\"P\", seq_len(10)),     turbidez = runif(10, 1, 50),     od = runif(10, 5, 9),     pH = runif(10, 6.5, 8.5),     temperatura = runif(10, 20, 28),     condutividade = runif(10, 50, 300),     stringsAsFactors = FALSE   ) }  # Coerce common numeric columns defensively (some example files may carry strings) num_candidates <- c(   \"turbidez\",\"od\",\"pH\",\"temperatura\",\"condutividade\",   \"dbo\",\"dbo5\",\"nitrato\",\"fosforo\",\"amonia\",   \"coliformes\",\"coliformes_totais\",\"coliformes_termotolerantes\" ) for (nm in intersect(num_candidates, names(wq_demo))) {   suppressWarnings({ wq_demo[[nm]] <- as.numeric(wq_demo[[nm]]) }) }  head(wq_demo) #>   ponto       data   ph   od turbidez  dbo coliformes p_total nt_total #> 1    P1 2024-06-07 7.08 5.33     63.8 5.38        331   0.080     1.30 #> 2    P1 2024-06-27 6.79 8.29     35.7 1.46         98   0.348     3.69 #> 3    P1 2024-01-14 8.43 4.23     60.6 1.22       3712   0.313     4.25 #> 4    P1 2024-07-13 8.30 6.21     50.7 4.09        200   0.447     2.54 #> 5    P1 2024-06-18 7.88 7.99     57.1 2.39         66   0.340     2.00 #> 6    P2 2024-02-19 8.09 4.61      1.0 4.11       3930   0.371     1.31 #>   temperatura tds #> 1        23.0 249 #> 2        21.2 329 #> 3        25.6 480 #> 4        20.2 731 #> 5        28.4 201 #> 6        27.0 724"},{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"compute-iqa-and-check-conama-compliance","dir":"Articles","previous_headings":"","what":"Compute IQA and check CONAMA compliance","title":"tikatuwq: basic workflow","text":"","code":"ok_iqa <- TRUE df <- tryCatch({   wq_demo |>     validate_wq() |>     iqa(na_rm = TRUE) }, error = function(e) {   ok_iqa <<- FALSE   message(\"iqa() failed in vignette build: \", conditionMessage(e))   wq_demo |>     validate_wq() })  conf <- tryCatch({   conama_check(df, classe = \"2\") }, error = function(e) {   message(\"conama_check() failed in vignette build: \", conditionMessage(e))   NULL })  if (!is.null(conf)) head(conf) #>   ponto       data   ph   od turbidez  dbo coliformes p_total nt_total #> 1    P1 2024-06-07 7.08 5.33     63.8 5.38        331   0.080     1.30 #> 2    P1 2024-06-27 6.79 8.29     35.7 1.46         98   0.348     3.69 #> 3    P1 2024-01-14 8.43 4.23     60.6 1.22       3712   0.313     4.25 #> 4    P1 2024-07-13 8.30 6.21     50.7 4.09        200   0.447     2.54 #> 5    P1 2024-06-18 7.88 7.99     57.1 2.39         66   0.340     2.00 #> 6    P2 2024-02-19 8.09 4.61      1.0 4.11       3930   0.371     1.31 #>   temperatura tds      IQA ph_ok ph_status ph__lim_min ph__lim_max ph__delta #> 1        23.0 249 8.169772  TRUE        ok           6           9         0 #> 2        21.2 329 8.772986  TRUE        ok           6           9         0 #> 3        25.6 480 7.195704  TRUE        ok           6           9         0 #> 4        20.2 731 8.022852  TRUE        ok           6           9         0 #> 5        28.4 201 8.789324  TRUE        ok           6           9         0 #> 6        27.0 724 7.422467  TRUE        ok           6           9         0 #>   od_ok        od_status od__lim_min od__lim_max od__delta turbidez_ok #> 1  TRUE               ok           5          NA      0.00        TRUE #> 2  TRUE               ok           5          NA      0.00        TRUE #> 3 FALSE abaixo_do_minimo           5          NA     -0.77        TRUE #> 4  TRUE               ok           5          NA      0.00        TRUE #> 5  TRUE               ok           5          NA      0.00        TRUE #> 6 FALSE abaixo_do_minimo           5          NA     -0.39        TRUE #>   turbidez_status turbidez__lim_min turbidez__lim_max turbidez__delta dbo_ok #> 1              ok                NA               100               0  FALSE #> 2              ok                NA               100               0   TRUE #> 3              ok                NA               100               0   TRUE #> 4              ok                NA               100               0   TRUE #> 5              ok                NA               100               0   TRUE #> 6              ok                NA               100               0   TRUE #>        dbo_status dbo__lim_min dbo__lim_max dbo__delta coliformes_ok #> 1 acima_do_maximo           NA            5       0.38          TRUE #> 2              ok           NA            5       0.00          TRUE #> 3              ok           NA            5       0.00         FALSE #> 4              ok           NA            5       0.00          TRUE #> 5              ok           NA            5       0.00          TRUE #> 6              ok           NA            5       0.00         FALSE #>   coliformes_status coliformes__lim_min coliformes__lim_max coliformes__delta #> 1                ok                  NA                1000                 0 #> 2                ok                  NA                1000                 0 #> 3   acima_do_maximo                  NA                1000              2712 #> 4                ok                  NA                1000                 0 #> 5                ok                  NA                1000                 0 #> 6   acima_do_maximo                  NA                1000              2930 #>   p_total_ok  p_total_status p_total__lim_min p_total__lim_max p_total__delta #> 1      FALSE acima_do_maximo               NA             0.05          0.030 #> 2      FALSE acima_do_maximo               NA             0.05          0.298 #> 3      FALSE acima_do_maximo               NA             0.05          0.263 #> 4      FALSE acima_do_maximo               NA             0.05          0.397 #> 5      FALSE acima_do_maximo               NA             0.05          0.290 #> 6      FALSE acima_do_maximo               NA             0.05          0.321"},{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"summaries-and-plots","dir":"Articles","previous_headings":"","what":"Summaries and plots","title":"tikatuwq: basic workflow","text":"IQA por ponto para o dataset de demonstração.","code":"if (isTRUE(ok_iqa)) {   plot_iqa(df) } conf_long <- tryCatch(conama_summary(df, classe = \"2\"), error = function(e) NULL) if (!is.null(conf_long)) head(conf_long) #> # A tibble: 6 × 7 #>   parametro valor lim_min lim_max status ok    delta #>   <chr>     <dbl>   <dbl>   <dbl> <chr>  <lgl> <dbl> #> 1 ph         7.08       6       9 ok     TRUE      0 #> 2 ph         6.79       6       9 ok     TRUE      0 #> 3 ph         8.43       6       9 ok     TRUE      0 #> 4 ph         8.3        6       9 ok     TRUE      0 #> 5 ph         7.88       6       9 ok     TRUE      0 #> 6 ph         8.09       6       9 ok     TRUE      0"},{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"render-a-report-writes-to-a-temporary-directory","dir":"Articles","previous_headings":"","what":"Render a report (writes to a temporary directory)","title":"tikatuwq: basic workflow","text":"","code":"# Avoid running nested rendering during vignette build on CRAN out_file <- render_report(df) out_file"},{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"interactive-maps-plot_map","dir":"Articles","previous_headings":"","what":"Interactive maps (plot_map)","title":"tikatuwq: basic workflow","text":"","code":"if (eval_interactive) {   # Minimal example dataset with coordinates   df_map <- data.frame(     rio = c(\"Buranhem\",\"Chamagunga\"),     ponto = c(\"P1\",\"P2\"),     data = as.Date(c(\"2025-09-20\",\"2025-09-21\")),     latitude  = c(-16.435, -16.498),     longitude = c(-39.062, -39.080),     iqa = c(72, 58)   )    plot_map(     df_map,     popup_cols = c(\"rio\",\"ponto\",\"data\",\"iqa\"),     color_by = \"iqa\"   ) } if (eval_interactive) {   plot_map(     df_map,     popup_cols = c(\"rio\",\"ponto\",\"data\",\"iqa\"),     cluster = FALSE,     tiles = \"CartoDB.Positron\"   ) }"},{"path":"https://tikatuwq.github.io/tikatuwq/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vinicius Saraiva Santos. Author, maintainer.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Santos, V. S. (2025). tikatuwq: Water Quality Assessment Environmental Compliance Brazil (v0.7.2). Zenodo. https://doi.org/10.5281/zenodo.17407297","code":"@Manual{,   title = {tikatuwq: Water Quality Assessment and Environmental Compliance in Brazil},   author = {Vinicius Saraiva Santos},   year = {2025},   note = {R package version 0.7.2},   doi = {10.5281/zenodo.17407297},   url = {https://github.com/tikatuwq/tikatuwq}, }"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"droplet-tikatuwq-an-r-package-for-water-quality-assessment-and-environmental-compliance-in-brazil","dir":"","previous_headings":"","what":"Water Quality Assessment and Environmental Compliance in Brazil","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"TikatuWQ open-source R package designed analyze, visualize, report water quality data according Brazilian environmental standards. implements main indices used country IQA/NSFWQI IET (Carlson Lamparelli) provides automated checks CONAMA Resolution 357/2005 compliance. package also includes trend analysis, data validation, automatic report generation. 📄 Ler em Português","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"installation-development","dir":"","previous_headings":"","what":"Installation (development)","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"install development dependencies check package locally:","code":"install.packages(c(\"devtools\",\"testthat\",\"rmarkdown\",\"ggplot2\",\"dplyr\",\"tidyr\",                    \"readr\",\"lubridate\",\"stringr\",\"glue\",\"scales\",\"broom\",\"purrr\")) devtools::load_all(\"tikatuwq\") devtools::check(\"tikatuwq\")"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"basic-workflow","dir":"","previous_headings":"","what":"Basic workflow","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"","code":"df <- read_wq(system.file(\"extdata\",\"exemplo_chamagunga.csv\", package=\"tikatuwq\")) |>   validate_wq() |>   iqa(na_rm = TRUE)  plot_iqa(df)  # Analytical text (rule-based) pars <- generate_analysis(df, classe_conama = \"2\",                           incluir_tendencia = TRUE,                           parametros_tendencia = c(\"turbidez\",\"od\",\"pH\"),                           contexto = list(river=\"Chamagunga\", period=\"2025-07\")) cat(paste(pars, collapse = \"\\n\\n\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"books-scientific-and-institutional-context","dir":"","previous_headings":"Basic workflow","what":"📚 Scientific and Institutional Context","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"TikatuWQ package developed Vinícius Saraiva Santos (author maintainer) part Tikatu Research Project, conducted within Nucleus Research Tropical Ecosystems – NuPEcoTropic, research group linked Federal University Southern Bahia (UFSB) coordinated Prof. Dr. Fabrício Berton Zanchi. work carried part activities Postgraduate Program Biosystems (PPG Biossistemas) UFSB, supervision Prof. Dr. Fabrício Berton Zanchi. Tikatu Project, developed coordinated Vinícius Saraiva Santos, integrates research focused environmental monitoring modeling.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"new-whats-new-in-v073","dir":"","previous_headings":"🆕 News","what":"🆕 What’s new in v0.7.3","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"robust IQA Accepts temp alias temperatura. Automatic numeric sanitization comma decimals <\/> signs. na_rm = TRUE, weights re-scaled inputs missing. IET (Carlson / Lamparelli) data.frame input iet_carlson() iet_lamparelli() now accept “raw” data.frame containing extra ID columns like rio, ponto, data, lat, lon. Relevant parameters auto-detected (secchi/sd, clorofila/chla, tp/p_total). p_total mg/L auto-converted tp µg/L. Use .keep_ids = TRUE preserve identifiers output. new dependencies, API break. Legacy vector calls keep working .","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"news-v072","dir":"","previous_headings":"🆕 News","what":"News v0.7.2","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"Removed non-standard fields (DOI, Citation) DESCRIPTION. Updated inst/CITATION use bibentry() (replacing deprecated citEntry()). functional API changes. Minor documentation improvements. R CMD check: 0 errors | 0 warnings | 0 notes ✅","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"news-v070","dir":"","previous_headings":"🆕 News","what":"News v0.7.0","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"Allow flexible parameter-based analyses site river. Support cross-comparisons (multiple parameters per site vice versa). Include descriptive statistics temporal trend detection. Full test coverage new modules. Minor improvements plot_trend() plot_map() (controlled messages). CRAN devtools::check() validations passed without errors.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"news-v062","dir":"","previous_headings":"🆕 News","what":"News v0.6.2","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"Corrective update requested CRAN. Fixed codoc WARNING generate_analysis() documentation. Removed deprecated parameters id_cols filter match current signature. functional code changes made.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"news-v061","dir":"","previous_headings":"🆕 News","what":"News v0.6.1","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"Maintenance update requested CRAN. Fixed relative link README-pt.md, now converted absolute HTTPS URL. functional code changes made.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"news-v060","dir":"","previous_headings":"🆕 News","what":"News v0.6.0","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"Trend lines per parameter/site Theil-Sen, OLS, LOESS methods. Supports faceting river/site point customization. Returns ggplot object ready visualization reports. Updated documentation examples pkgdown site.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"v051","dir":"","previous_headings":"🆕 News","what":"v0.5.1","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"Fixed invalid URLs reported CRAN (updated links DOIs included). Minor documentation adjustments R-devel compatibility.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"v050","dir":"","previous_headings":"🆕 News","what":"v0.5.0","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"Added internal helper functions simplify workflow. New feature plot_map() spatial visualization sampling sites. Revised validation messages standardized formatting.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"v021","dir":"","previous_headings":"🆕 News","what":"v0.2.1","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"generate_analysis() — automatic rule-based analytical paragraphs. Report template updated include textual analysis. Structures added iet_lamparelli() nsfwqi().","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"installation-via-github","dir":"","previous_headings":"","what":"Installation via GitHub","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"","code":"install.packages(\"remotes\")  # or devtools remotes::install_github(\"tikatuwq/tikatuwq\", dependencies = TRUE)  # stable version (by tag) remotes::install_github(\"tikatuwq/tikatuwq@v0.7.0\", build_vignettes = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"conama-compliance-class-2","dir":"","previous_headings":"Installation via GitHub","what":"CONAMA compliance (class 2)","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"","code":"df <- read_wq(system.file(\"extdata\",\"exemplo_chamagunga.csv\", package=\"tikatuwq\"))  # Table with only violations, ready for report conama_report(df, \"2\", only_violations = TRUE, pretty = TRUE)  # Short textual summary cat(paste(conama_text(df, \"2\", only_violations = TRUE), collapse = \"\\n\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"main-functions","dir":"","previous_headings":"","what":"Main functions","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"read_wq(path) — reads water quality datasets (CSV). validate_wq(df) — validates/normalizes columns units. iqa(df, na_rm = TRUE, ...) — Water Quality Index (CETESB/NSF). iet_carlson(df) / iet_lamparelli(df) — Trophic State Index. nsfwqi(df) — NSFWQI (framework ready). conama_limits(class) — limits CONAMA 357/2005 Resolution. conama_check(df, class) — compliance parameter (*_ok columns). Visualizations: plot_iqa(), plot_series(), plot_box(), plot_heatmap(), plot_map(), plot_trend() (returns ggplot object). Reporting/Text: generate_analysis(), render_report(). Example data: system.file(\"extdata\", \"exemplo_chamagunga.csv\", package = \"tikatuwq\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"documentation-and-support","dir":"","previous_headings":"","what":"Documentation and support","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"CRAN page: https://cran.r-project.org/package=tikatuwq Pkgdown site: https://tikatuwq.github.io/tikatuwq/ Issues/Suggestions: https://github.com/tikatuwq/tikatuwq/issues Releases: https://github.com/tikatuwq/tikatuwq/releases","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"","code":"citation(\"tikatuwq\")"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"how-to-cite","dir":"","previous_headings":"Citation","what":"How to cite","title":"Water Quality Assessment and Environmental Compliance in Brazil","text":"use tikatuwq research, please cite follows: Santos, V. S. (2025). tikatuwq: Water Quality Assessment Environmental Compliance Brazil (v0.7.0). Zenodo. https://doi.org/10.5281/zenodo.17407297 BibTeX entry:","code":"@Manual{Santos2025tikatuwq,   title  = {tikatuwq: Water Quality Assessment and Environmental Compliance in Brazil},   author = {Vinicius Saraiva Santos},   year   = {2025},   note   = {R package version 0.7.0},   doi    = {10.5281/zenodo.17407297},   url    = {https://github.com/tikatuwq/tikatuwq}, }"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":null,"dir":"","previous_headings":"","what":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"TikatuWQ é um pacote R de código aberto desenvolvido para analisar, visualizar e relatar dados de qualidade da água de acordo com os padrões ambientais brasileiros. Implementa os principais índices utilizados país: IQA/NSFWQI e IET (Carlson e Lamparelli) e realiza verificações automáticas de conformidade com Resolução CONAMA 357/2005. O pacote também inclui análise de tendências, validação de dados e geração automática de relatórios. 📄 Read English","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"instalação-desenvolvimento","dir":"","previous_headings":"","what":"Instalação (desenvolvimento)","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Para instalar dependências de desenvolvimento e verificar o pacote localmente:","code":"install.packages(c(\"devtools\",\"testthat\",\"rmarkdown\",\"ggplot2\",\"dplyr\",\"tidyr\",                    \"readr\",\"lubridate\",\"stringr\",\"glue\",\"scales\",\"broom\",\"purrr\")) devtools::load_all(\"tikatuwq\") devtools::check(\"tikatuwq\")"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"fluxo-básico-de-uso","dir":"","previous_headings":"","what":"Fluxo básico de uso","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"","code":"df <- read_wq(system.file(\"extdata\",\"exemplo_chamagunga.csv\", package=\"tikatuwq\")) |>   validate_wq() |>   iqa(na_rm = TRUE)  plot_iqa(df)  # Texto analítico (baseado em regras) pars <- generate_analysis(df, classe_conama = \"2\",                           incluir_tendencia = TRUE,                           parametros_tendencia = c(\"turbidez\",\"od\",\"pH\"),                           contexto = list(rio=\"Chamagunga\", periodo=\"2025-07\")) cat(paste(pars, collapse = \"\\n\\n\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"books-contexto-científico-e-institucional","dir":"","previous_headings":"Fluxo básico de uso","what":"📚 Contexto Científico e Institucional","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"O pacote TikatuWQ foi desenvolvido por Vinícius Saraiva Santos (autor e mantenedor) como parte Projeto de Pesquisa Tikatu, conduzido âmbito Núcleo de Pesquisas em Ecossistemas Tropicais – NuPEcoTropic, grupo de pesquisa vinculado à Universidade Federal Sul da Bahia (UFSB) e coordenado pelo Prof. Dr. Fabrício Berton Zanchi. Este trabalho foi realizado contexto das atividades Programa de Pós-Graduação em Biossistemas (PPG Biossistemas) da UFSB, sob orientação Prof. Dr. Fabrício Berton Zanchi. O Projeto Tikatu, desenvolvido e coordenado por Vinícius Saraiva Santos, integra pesquisas voltadas ao monitoramento e modelagem ambiental.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"new-novidades-na-versão-073-atual","dir":"","previous_headings":"🆕 Novidades","what":"🆕 Novidades na versão 0.7.3 (atual)","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"IQA mais robusto Aceita temp como alias de temperatura. “Numificação” automática de valores com vírgula decimal e sinais < >. Com na_rm = TRUE, repondera os pesos quando faltarem parâmetros. IET (Carlson / Lamparelli) com data.frame Agora iet_carlson() e iet_lamparelli() aceitam um data.frame “cru” com colunas como rio, ponto, data, lat, lon, etc. Parâmetros relevantes são detectados automaticamente (secchi/sd, clorofila/chla, tp/p_total). p_total em mg/L é convertido automaticamente para tp em µg/L. Use .keep_ids = TRUE para preservar identificadores (ex.: rio, ponto, data) na saída. Sem novas dependências, sem quebra de API. Tudo continua funcionando como antes para quem usa chamadas vetoriais.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"novidades-v072","dir":"","previous_headings":"🆕 Novidades","what":"Novidades v0.7.2","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Remoção dos campos não padrão (DOI, Citation) arquivo DESCRIPTION. Atualização arquivo inst/CITATION para o formato bibentry() (substituindo citEntry()). Nenhuma alteração funcional — o comportamento pacote permanece o mesmo.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"novidades-v070","dir":"","previous_headings":"🆕 Novidades","what":"Novidades v0.7.0","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Permitem análises flexíveis por parâmetro e ponto de coleta ou rio. Suportam comparações cruzadas (múltiplos parâmetros por ponto e vice-versa). Incluem estatísticas descritivas e detecção de tendências temporais. Cobertura total de testes para os novos módulos. Pequenas melhorias em plot_trend() e plot_map() (mensagens controladas). Todas validações CRAN e devtools::check() passaram sem erros.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"novidades-v062","dir":"","previous_headings":"🆕 Novidades","what":"Novidades v0.6.2","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Atualização corretiva solicitada pelo CRAN. Corrigido o aviso codoc na documentação de generate_analysis(). Removidos parâmetros obsoletos id_cols e filter para manter compatibilidade com versão atual. Nenhuma alteração funcional código.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"novidades-v061","dir":"","previous_headings":"🆕 Novidades","what":"Novidades v0.6.1","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Atualização de manutenção solicitada pelo CRAN. Corrigido o link relativo README-pt.md, agora convertido para URL HTTPS absoluta. Nenhuma alteração funcional código.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"novidades-v060","dir":"","previous_headings":"🆕 Novidades","what":"Novidades v0.6.0","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Linhas de tendência por parâmetro/ponto com métodos Theil-Sen, OLS e LOESS. Suporte facetas por rio/ponto e personalização de pontos. Retorna um objeto ggplot pronto para visualização ou relatórios. Documentação e exemplos atualizados site pkgdown.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"v051","dir":"","previous_headings":"🆕 Novidades","what":"v0.5.1","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Corrigidos URLs inválidos reportados pelo CRAN (links e DOIs atualizados). Pequenos ajustes de documentação para compatibilidade com o R-devel.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"v050","dir":"","previous_headings":"🆕 Novidades","what":"v0.5.0","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Adicionadas funções helper internas para simplificar o fluxo de trabalho. Novo recurso plot_map() para visualização espacial dos pontos de amostragem. Mensagens de validação revisadas e formatação padronizada.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"v021","dir":"","previous_headings":"🆕 Novidades","what":"v0.2.1","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"generate_analysis() — geração automática de parágrafos analíticos baseados em regras. Modelo de relatório atualizado para incluir análise textual. Estruturas adicionadas para iet_lamparelli() e nsfwqi().","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"instalação-via-github","dir":"","previous_headings":"","what":"Instalação via GitHub","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"","code":"install.packages(\"remotes\")  # ou devtools remotes::install_github(\"tikatuwq/tikatuwq\", dependencies = TRUE)  # versão estável (por tag) remotes::install_github(\"tikatuwq/tikatuwq@v0.7.0\", build_vignettes = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"conformidade-conama-classe-2","dir":"","previous_headings":"Instalação via GitHub","what":"Conformidade CONAMA (classe 2)","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"","code":"df <- read_wq(system.file(\"extdata\",\"exemplo_chamagunga.csv\", package=\"tikatuwq\"))  # Tabela apenas com não conformidades, pronta para relatório conama_report(df, \"2\", only_violations = TRUE, pretty = TRUE)  # Resumo textual curto cat(paste(conama_text(df, \"2\", only_violations = TRUE), collapse = \"\\n\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"principais-funções","dir":"","previous_headings":"","what":"Principais funções","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"read_wq(path) — lê conjuntos de dados de qualidade da água (CSV). validate_wq(df) — valida e normaliza colunas e unidades. iqa(df, na_rm = TRUE, ...) — Índice de Qualidade da Água (CETESB/NSF). iet_carlson(df) / iet_lamparelli(df) — Índice Estado Trófico. nsfwqi(df) — NSFWQI (estrutura pronta). conama_limits(class) — limites da Resolução CONAMA 357/2005. conama_check(df, class) — verificação de conformidade por parâmetro (colunas *_ok). Visualizações: plot_iqa(), plot_series(), plot_box(), plot_heatmap(), plot_map(), plot_trend() (retorna objeto ggplot). Relatórios/Textos: generate_analysis(), render_report(). Dados de exemplo: system.file(\"extdata\", \"exemplo_chamagunga.csv\", package = \"tikatuwq\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"documentação-e-suporte","dir":"","previous_headings":"","what":"Documentação e suporte","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Página CRAN: https://cran.r-project.org/package=tikatuwq Site pkgdown: https://tikatuwq.github.io/tikatuwq/ Sugestões e issues: https://github.com/tikatuwq/tikatuwq/issues Releases: https://github.com/tikatuwq/tikatuwq/releases","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"citação","dir":"","previous_headings":"","what":"Citação","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"","code":"citation(\"tikatuwq\")"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"como-citar","dir":"","previous_headings":"Citação","what":"Como citar","title":"💧 TikatuWQ: Um Pacote R para Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil","text":"Se você utilizar o tikatuwq em suas pesquisas, cite da seguinte forma: Santos, V. S. (2025). tikatuwq: Avaliação da Qualidade da Água e Conformidade Ambiental Brasil (v0.7.0). Zenodo. https://doi.org/10.5281/zenodo.17407297 Entrada BibTeX:","code":"@Manual{Santos2025tikatuwq,   title  = {tikatuwq: Avaliação da Qualidade da Água e Conformidade Ambiental no Brasil},   author = {Vinicius Saraiva Santos},   year   = {2025},   note   = {R package version 0.7.0},   doi    = {10.5281/zenodo.17407297},   url    = {https://github.com/tikatuwq/tikatuwq}, }"},{"path":"https://tikatuwq.github.io/tikatuwq/README_install.html","id":"instalação-via-github","dir":"","previous_headings":"","what":"Instalação via GitHub","title":"NA","text":"Badge (opcional):","code":"install.packages(\"remotes\")  # ou devtools remotes::install_github(\"tikatuwq/tikatuwq\", dependencies = TRUE)  # versão estável (por tag) remotes::install_github(\"tikatuwq/tikatuwq@v0.4.1\", build_vignettes = TRUE) [![R-CMD-check](https://github.com/tikatuwq/tikatuwq/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/tikatuwq/tikatuwq/actions/workflows/R-CMD-check.yaml)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize/standardize units (placeholder) — clean_units","title":"Normalize/standardize units (placeholder) — clean_units","text":"Extension point normalize units (e.g., mg/L, uS/cm). Currently returns df unchanged.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize/standardize units (placeholder) — clean_units","text":"","code":"clean_units(df, units_map = NULL)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize/standardize units (placeholder) — clean_units","text":"df Input data frame / tibble. units_map Optional mapping units.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize/standardize units (placeholder) — clean_units","text":"input df unchanged (placeholder).","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize/standardize units (placeholder) — clean_units","text":"","code":"clean_units(data.frame(ph = c(7, 7.2), od = c(6.5, 7.0))) #>    ph  od #> 1 7.0 6.5 #> 2 7.2 7.0"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":null,"dir":"Reference","previous_headings":"","what":"CONAMA conformity check (detailed; default class = ","title":"CONAMA conformity check (detailed; default class = ","text":"parameter present df, adds columns: *_ok (logical), *_status one \"ok\", \"acima_do_maximo\", \"abaixo_do_minimo\", *__lim_min *__lim_max (thresholds used), *__delta (difference relevant limit; >0 max, <0 min, 0 ok). multiple limit rows exist parameter, *_ok TRUE row satisfied; status/lim_min/lim_max/delta, first satisfied row chosen; none satisfy, row smallest absolute violation (min |delta|) used.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CONAMA conformity check (detailed; default class = ","text":"","code":"conama_check(df, classe = \"2\")"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CONAMA conformity check (detailed; default class = ","text":"df tibble/data.frame parameter columns (e.g., ph, turbidez, od, dbo). classe Character class label (e.g., \"especial\", \"1\", \"2\", \"3\", \"4\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CONAMA conformity check (detailed; default class = ","text":"input df additional columns per parameter described.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CONAMA conformity check (detailed; default class = ","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") head(conama_check(wq_demo, classe = \"2\")) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Limits for Brazilian CONAMA 357/2005 — conama_limits","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"Returns parameter limits defined CONAMA Resolution 357/2005 given water-use class.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"","code":"conama_limits(class)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"class Integer character. Target class (e.g., 1, 2, 3, 4 \"special\"), according CONAMA 357/2005.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"tibble/data frame one row per parameter regulatory thresholds. Typical columns: parametro: parameter name (character, normalized snake_case) classe: class label (character) min/max (equivalents): numeric thresholds (may NA) metadata columns present (e.g., unit, criterion)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"","code":"# Class 2 thresholds (first rows) head(conama_limits(2)) #> # A tibble: 6 × 8 #>   classe parametro   unidade     min   max observacao            status contexto #>   <chr>  <chr>       <chr>     <dbl> <dbl> <chr>                 <chr>  <chr>    #> 1 2      ph          unid          6     9 NA                    ok     Águas d… #> 2 2      od          mg/L          5    NA mínimo em qualquer a… ok     Águas d… #> 3 2      turbidez    UNT          NA   100 NA                    ok     Águas d… #> 4 2      dbo         mg/L         NA     5 DBO5 a 20°C           ok     Águas d… #> 5 2      coliformes  NMP/100mL    NA  1000 <=1000 em 80% de ≥6 … ok     Águas d… #> 6 2      clorofila_a µg/L         NA    30 NA                    ok     Águas d…"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":null,"dir":"Reference","previous_headings":"","what":"CONAMA conformity report (table) — conama_report","title":"CONAMA conformity report (table) — conama_report","text":"CONAMA conformity report (table)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CONAMA conformity report (table) — conama_report","text":"","code":"conama_report(   df,   classe = \"2\",   only_violations = TRUE,   pretty = FALSE,   decimal_mark = \",\",   big_mark = \".\" )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CONAMA conformity report (table) — conama_report","text":"df Input data classe CONAMA class label (e.g., \"2\") only_violations TRUE, returns rows status != \"ok\" pretty TRUE, returns formatted numeric columns display decimal_mark Decimal separator (default \",\") big_mark Thousands separator (default \".\")","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CONAMA conformity report (table) — conama_report","text":"tibble. pretty = FALSE: parametro, valor, lim_min, lim_max, status, delta. pretty = TRUE, numeric columns formatted character \"natural\" decimals.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CONAMA conformity report (table) — conama_report","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") conama_report(wq_demo, classe = \"2\", only_violations = TRUE) conama_report(wq_demo, classe = \"2\", only_violations = TRUE, pretty = TRUE) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"CONAMA conformity summary (long format) — conama_summary","title":"CONAMA conformity summary (long format) — conama_summary","text":"CONAMA conformity summary (long format)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CONAMA conformity summary (long format) — conama_summary","text":"","code":"conama_summary(df, classe = \"2\")"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CONAMA conformity summary (long format) — conama_summary","text":"df Input data classe CONAMA class label","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CONAMA conformity summary (long format) — conama_summary","text":"tibble columns: parametro, valor, lim_min, lim_max, status, ok, delta.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CONAMA conformity summary (long format) — conama_summary","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") head(conama_summary(wq_demo, classe = \"2\")) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Text summary of conformity (bulleted, formatted) — conama_text","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"Text summary conformity (bulleted, formatted)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"","code":"conama_text(   df,   classe = \"2\",   only_violations = FALSE,   decimal_mark = \",\",   big_mark = \".\" )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"df Input data classe CONAMA class label only_violations TRUE, list parameters violation decimal_mark Decimal separator (default \",\") big_mark Thousands separator (default \".\")","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"Character vector lines (first line header, rest bullets).","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") cat(conama_text(wq_demo, classe = \"2\"), sep = \"\\n\") } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate analytical paragraphs (rule-based) — generate_analysis","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"Produz 3–5 paragrafos curtos, legiveis por humanos, resumindo qualidade da agua partir de IQA/WQI, conformidade com CONAMA 357/2005 e (opcionalmente) tendencias temporais simples. E rule-based (nao usa IA) e aceita metadados opcionais para compor o texto.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"","code":"generate_analysis(   df,   classe_conama = \"2\",   incluir_tendencia = TRUE,   parametros_tendencia = c(\"turbidez\", \"od\", \"pH\"),   contexto = list(rio = NA, periodo = NA, cidade = NA) )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"df Data frame contendo ao menos coluna ponto. Recomenda-se tambem colunas necessarias para checagens CONAMA e para o calculo IQA. classe_conama Character (ex. \"2\"). Classe-alvo para checagem da Resolucao CONAMA 357/2005. incluir_tendencia Logical; se TRUE, calcula tendencias lineares simples ao longo tempo. parametros_tendencia Character vector; nomes dos parametros para testar tendencia temporal. contexto Lista com metadados opcionais (PT/EN), por exemplo list(rio = \"Rio Pardo\", periodo = \"jan–jun/2025\", cidade = \"Lencois\"). chaves aceitas sao rio/river, periodo/period, cidade.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"Vetor character com 3 5 paragrafos analiticos prontos para relatorio.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"","code":"if (FALSE) { # \\dontrun{ library(tikatuwq) data(\"wq_demo\") txt <- generate_analysis(   df = wq_demo,   classe_conama = \"2\",   incluir_tendencia = TRUE,   parametros_tendencia = c(\"turbidez\",\"od\",\"pH\"),   contexto = list(rio = \"Rio Azul\", periodo = \"jan–jun/2025\") ) cat(paste(txt, collapse = \"\\n\\n\")) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":null,"dir":"Reference","previous_headings":"","what":"Trophic State Index (Carlson) — iet_carlson","title":"Trophic State Index (Carlson) — iet_carlson","text":"Computes Carlson's Trophic State Index (TSI/IET) Secchi depth, chlorophyll-, total phosphorus. Returns component scores overall IET row-wise mean available components. can also pass data.frame first argument (see Details).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trophic State Index (Carlson) — iet_carlson","text":"","code":"iet_carlson(secchi = NULL, clorofila = NULL, tp = NULL, .keep_ids = FALSE)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trophic State Index (Carlson) — iet_carlson","text":"secchi Numeric vector Secchi depth (m) data.frame containing columns named secchi (m), clorofila (ug/L) tp (ug/L) p_total (mg/L). data.frame provided, clorofila tp must NULL. clorofila Numeric vector chlorophyll-(ug/L). tp Numeric vector total phosphorus (ug/L). .keep_ids Logical; data.frame provided, bind back common ID columns (rio, ponto, data, lat, lon). Default FALSE (keeps historical behaviour).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trophic State Index (Carlson) — iet_carlson","text":"data frame columns (applicable): TSI_Secchi — component Secchi depth. TSI_Chla — component chlorophyll-. TSI_TP — component total phosphorus. IET — overall Carlson index (row mean).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trophic State Index (Carlson) — iet_carlson","text":"Implemented component formulas (Carlson 1977): TSI_Secchi = 60 - 14.41 * log10(secchi) TSI_Chla  = 9.81 * log10(clorofila) + 30.6 TSI_TP    = 14.42 * log10(tp) + 4.15 data.frame provided, character inputs using comma decimal (e.g. \"3,2\") inequality symbols (e.g. \"<0,1\") safely converted numeric. p_total (mg/L) exists instead tp (ug/L), converted internally (tp = p_total * 1000). Inputs may contain NA recycled according R rules. overall index IET row mean available components (na.rm = TRUE).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trophic State Index (Carlson) — iet_carlson","text":"Carlson, R. E. (1977). trophic state index lakes. Limnology Oceanography, 22(2), 361–369. doi:10.4319/lo.1977.22.2.0361","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trophic State Index (Carlson) — iet_carlson","text":"","code":"# Vector usage (kept as-is) secchi <- c(1.2, 0.8, 0.4)        # m clorofila <- c(5, 12, 30)         # ug/L tp <- c(20, 40, 70)               # ug/L iet_carlson(secchi = secchi, clorofila = clorofila, tp = tp) #>   TSI_Secchi TSI_Chla   TSI_TP      IET #> 1   58.85900 37.45690 22.91085 39.74225 #> 2   61.39647 41.18677 27.25171 43.27832 #> 3   65.73432 45.09056 30.75631 47.19373  # Data frame usage (optional) # df <- data.frame(secchi = secchi, clorofila = clorofila, p_total = c(0.02, 0.04, 0.07)) # iet_carlson(df)                  # auto-converts p_total (mg/L) to tp (ug/L) # iet_carlson(df, .keep_ids = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":null,"dir":"Reference","previous_headings":"","what":"Trophic State Index (Lamparelli) — iet_lamparelli","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"Computes components Lamparelli trophic state index (TSI/IET) total phosphorus, chlorophyll-, Secchi depth, returns overall Lamparelli index row-wise mean available components. can also pass data.frame first argument (see Details).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"","code":"iet_lamparelli(   tp = NULL,   chla = NULL,   sd = NULL,   ambiente = c(\"rio\", \"reservatorio\"),   .keep_ids = FALSE )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"tp Numeric total phosphorus (mg/L) data.frame containing columns named tp (ug/L) p_total (mg/L), chla clorofila (ug/L), sd secchi (m). data.frame provided, chla sd must NULL. chla Numeric chlorophyll-(ug/L). sd Numeric Secchi disk depth (m). ambiente Character, environment type: 'rio' 'reservatorio'. .keep_ids Logical; data.frame provided, bind back common ID columns (rio, ponto, data, lat, lon). Default FALSE (preserves historical behaviour).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"Data frame IET components overall IET_Lamp.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"Minimal, pragmatic implementation; confirm coefficients/thresholds region regulatory use. Character inputs like \"3,2\" \"<0,1\" safely converted. p_total (mg/L) present, converted tp ug/L via tp = p_total * 1000.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":null,"dir":"Reference","previous_headings":"","what":"Water Quality Index (WQI / IQA) — iqa","title":"Water Quality Index (WQI / IQA) — iqa","text":"Computes IQA/WQI combining parameter-specific sub-scores (Qi) via weighted mean. Sub-scores obtained piecewise-linear interpolation approximate curves (CETESB/NSF-like).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Water Quality Index (WQI / IQA) — iqa","text":"","code":"iqa(   df,   pesos = c(od = 0.17, coliformes = 0.15, dbo = 0.1, nt_total = 0.1, p_total = 0.1,     turbidez = 0.08, tds = 0.08, pH = 0.12, temperatura = 0.1),   method = c(\"CETESB_approx\"),   na_rm = FALSE )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Water Quality Index (WQI / IQA) — iqa","text":"df Data frame (tibble) required parameter columns. Expected defaults (Portuguese names): od, coliformes, dbo, nt_total, p_total, turbidez, tds, ph (pH), temperatura. pesos Named numeric weights parameter (sum required). Defaults follow CETESB/NSF practice: od = 0.17 coliformes = 0.15 dbo = 0.10 nt_total = 0.10 p_total = 0.10 turbidez = 0.08 tds = 0.08 pH = 0.12 (mapped column ph needed) temperatura = 0.10 method Character scalar; interpolation table set. Currently \"CETESB_approx\". na_rm Logical; FALSE (default), rows containing missing Qi values trigger error. TRUE, IQA computed using available parameters, denominator adjusted sum weights present parameters.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Water Quality Index (WQI / IQA) — iqa","text":"input df added numeric column IQA. attribute \"iqa_method\" set returned data.frame/tibble.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Water Quality Index (WQI / IQA) — iqa","text":"Column name compatibility: interpolation table uses key \"pH\". data uses ph column (lowercase), automatically mapped \"pH\" curve. parameter names used -. Values clipped [0, 100] aggregation.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Water Quality Index (WQI / IQA) — iqa","text":"","code":"# Minimal example using the demo data: d <- wq_demo d2 <- iqa(d, na_rm = TRUE) head(d2$IQA) #> [1] 8.169772 8.772986 7.195704 8.022852 8.789324 7.422467"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa_curve_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabela de curvas Qi (IQA) por parÃƒÂ¢metro (estrutura CETESB/NSF) — iqa_curve_table","title":"Tabela de curvas Qi (IQA) por parÃƒÂ¢metro (estrutura CETESB/NSF) — iqa_curve_table","text":"Tabela de curvas Qi (IQA) por parâmetros (estrutura CETESB/NSF)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa_curve_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabela de curvas Qi (IQA) por parÃƒÂ¢metro (estrutura CETESB/NSF) — iqa_curve_table","text":"","code":"iqa_curve_table(method = c(\"CETESB_approx\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":null,"dir":"Reference","previous_headings":"","what":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"Computes prototype NSF WQI weighted arithmetic mean parameter sub-scores (Qi) using simple piecewise rules. intended quick demonstrations full replication original NSF curves.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"","code":"nsfwqi(   df,   pesos = c(do = 0.17, fc = 0.16, ph = 0.11, bod = 0.11, temp_change = 0.1, po4 = 0.1,     no3 = 0.1, turbidez = 0.08, sst = 0.07),   na_rm = FALSE )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"df Data frame containing columns compatible mapping . pesos Named numeric vector parameter weights. Defaults follow common NSF WQI variant: =.17, fc=.16, ph=.11, bod=.11, temp_change=.10, po4=.10, no3=.10, turbidez=.08, sst=.07. na_rm Logical; allow NA per row rescale weights available parameters (TRUE) error missing inputs (FALSE).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"input df added numeric column NSFWQI.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"function accepts NSF-style column names common Brazilian aliases. mapping tried (present) :  <- od fc  <- coliformes ph  <- pH ph bod <- dbo turbidez stays turbidez sst <- solidos_suspensos po4 <- po4 p_ortofosfato no3 <- no3 n_nitrato temp_change must supplied -(delta T reference) na_rm = TRUE, weights rescaled per row parameters available row. na_rm = FALSE (default), missing required input leads error.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"","code":"d <- wq_demo # create minimal aliases so the prototype can run d$do  <- d$od d$fc  <- d$coliformes d$ph  <- d$ph d$bod <- d$dbo # others are missing; use na_rm = TRUE to rescale weights by row out <- nsfwqi(d, na_rm = TRUE) #> Warning: 'drop' argument will be ignored head(out$NSFWQI) #> [1] 68.33333 87.46032 61.42857 79.60317 84.92063 63.88889"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter analysis utilities (single-parameter) — param_analysis","title":"Parameter analysis utilities (single-parameter) — param_analysis","text":"Conjunto de funcoes para analisar um parametro por chamada, com filtros opcionais por rio e ponto, e utilitarios de periodo.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_analysis_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-parameter analysis wrappers — param_analysis_multi","title":"Multi-parameter analysis wrappers — param_analysis_multi","text":"Wrappers para operar com varios parametros por chamada, reaproveitando API base (1 parametro): param_summary(), param_trend(), param_plot().","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot temporal de um parametro (com filtro por rio e/ou ponto) — param_plot","title":"Plot temporal de um parametro (com filtro por rio e/ou ponto) — param_plot","text":"Gera grafico temporal para um parametro, com opcoes de filtro por rios e/ou pontos. Se houver mais de um ponto, cor diferencia pontos; opcional facet = TRUE para facetar por ponto. Pode adicionar reta de tendencia com add_trend = TRUE (lm).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot temporal de um parametro (com filtro por rio e/ou ponto) — param_plot","text":"","code":"param_plot(   df,   parametro,   rios = NULL,   pontos = NULL,   add_trend = TRUE,   facet = FALSE )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot temporal de um parametro (com filtro por rio e/ou ponto) — param_plot","text":"df Data frame com data e coluna parametro. Idealmente contem ponto, e opcionalmente rio. parametro Character; nome parametro. rios Vetor de nomes de rio filtrar (opcional; usa coluna rio se existir). pontos Vetor de pontos filtrar (opcional; usa coluna ponto se existir). add_trend Logical; se TRUE, adiciona geom_smooth(method = \"lm\", se = FALSE). facet Logical; se TRUE e houver ponto, aplica facet_wrap(~ponto).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot temporal de um parametro (com filtro por rio e/ou ponto) — param_plot","text":"Objeto ggplot.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot temporal de um parametro (com filtro por rio e/ou ponto) — param_plot","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") param_plot(wq_demo, \"turbidez\", pontos = c(\"P1\",\"P2\"), add_trend = TRUE, facet = TRUE) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot temporal para varios parametros (filtro por rio/ponto) — param_plot_multi","title":"Plot temporal para varios parametros (filtro por rio/ponto) — param_plot_multi","text":"Combina varios parametros em um unico grafico. Por padrao: cor = ponto (se existir); facet = \"parametro\" cria paineis por parametro; facet = \"grid\" usa grade ponto ~ parametro quando ha mais de um ponto.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot temporal para varios parametros (filtro por rio/ponto) — param_plot_multi","text":"","code":"param_plot_multi(   df,   parametros,   rios = NULL,   pontos = NULL,   add_trend = TRUE,   facet = c(\"parametro\", \"none\", \"grid\") )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot temporal para varios parametros (filtro por rio/ponto) — param_plot_multi","text":"df Data frame com data e colunas dos parametros. parametros Vetor de nomes de parametros. rios Vetor de rios para filtrar (opcional; usa coluna rio se existir). pontos Vetor de pontos para filtrar (opcional; usa coluna ponto se existir). add_trend Logical; se TRUE, adiciona reta lm em cada painel. facet \"parametro\", \"none\" ou \"grid\".","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot temporal para varios parametros (filtro por rio/ponto) — param_plot_multi","text":"Objeto ggplot.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_plot_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot temporal para varios parametros (filtro por rio/ponto) — param_plot_multi","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") param_plot_multi(wq_demo, c(\"turbidez\",\"od\"), pontos = c(\"P1\",\"P2\"),                  add_trend = TRUE, facet = \"grid\") } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Resumo estatistico por parametro (com filtro por rio e/ou ponto) — param_summary","title":"Resumo estatistico por parametro (com filtro por rio e/ou ponto) — param_summary","text":"Produz resumo estatistico para um parametro, com opcoes de filtro por rios e/ou pontos e agregacao opcional por periodo (mes/trimestre/ano), quando houver coluna data.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resumo estatistico por parametro (com filtro por rio e/ou ponto) — param_summary","text":"","code":"param_summary(   df,   parametro,   rios = NULL,   pontos = NULL,   period = c(\"none\", \"month\", \"quarter\", \"year\"),   na_rm = TRUE )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resumo estatistico por parametro (com filtro por rio e/ou ponto) — param_summary","text":"df Data frame com ao menos coluna parametro. Idealmente contem ponto, e opcionalmente rio e data. parametro Character; nome parametro (ex.: \"turbidez\", \"od\", \"pH\"). rios Vetor de nomes de rio filtrar (opcional; usa coluna rio se existir). pontos Vetor de pontos filtrar (opcional; usa coluna ponto se existir). period \"none\", \"month\", \"quarter\" ou \"year\" para agregar por periodo (requer coluna data). na_rm Remover NA dos calculos? (default TRUE)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resumo estatistico por parametro (com filtro por rio e/ou ponto) — param_summary","text":"Tibble com colunas de agrupamento disponiveis (rio, ponto, periodo) e metricas: n, mean, sd, min, median, max.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resumo estatistico por parametro (com filtro por rio e/ou ponto) — param_summary","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") param_summary(wq_demo, \"turbidez\", pontos = \"P1\") param_summary(wq_demo, \"od\", rios = \"Rio Azul\", period = \"month\") } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Resumo para varios parametros (filtro por rio/ponto) — param_summary_multi","title":"Resumo para varios parametros (filtro por rio/ponto) — param_summary_multi","text":"Itera sobre um vetor de parametros, chamando param_summary() para cada um, e combina saidas em uma unica tabela, acrescentando coluna parametro.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resumo para varios parametros (filtro por rio/ponto) — param_summary_multi","text":"","code":"param_summary_multi(   df,   parametros,   rios = NULL,   pontos = NULL,   period = c(\"none\", \"month\", \"quarter\", \"year\"),   na_rm = TRUE )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resumo para varios parametros (filtro por rio/ponto) — param_summary_multi","text":"df Data frame com colunas necessarias (ver param_summary()). parametros Vetor de nomes de parametros (ex.: c(\"turbidez\",\"od\",\"pH\")). rios Vetor de rios para filtrar (opcional; usa coluna rio se existir). pontos Vetor de pontos para filtrar (opcional; usa coluna ponto se existir). period \"none\",\"month\",\"quarter\",\"year\" (igual param_summary()). na_rm Logical; repassado para param_summary().","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resumo para varios parametros (filtro por rio/ponto) — param_summary_multi","text":"Tibble combinando os resumos de todos os parametros, com coluna parametro indicando origem.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_summary_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resumo para varios parametros (filtro por rio/ponto) — param_summary_multi","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") param_summary_multi(wq_demo, c(\"turbidez\",\"od\"), pontos = c(\"P1\",\"P2\")) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Tendencia temporal por parametro (por rio/ponto se existentes) — param_trend","title":"Tendencia temporal por parametro (por rio/ponto se existentes) — param_trend","text":"Ajusta um modelo lm(valor ~ tempo) para um parametro, retornando slope, p_value, r2 e n. Se existirem colunas rio e/ou ponto, calcula por grupo; caso contrario, calcula geral.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tendencia temporal por parametro (por rio/ponto se existentes) — param_trend","text":"","code":"param_trend(df, parametro, rios = NULL, pontos = NULL, na_rm = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tendencia temporal por parametro (por rio/ponto se existentes) — param_trend","text":"df Data frame com data e coluna parametro. Idealmente contem ponto, e opcionalmente rio. parametro Character; nome parametro. rios Vetor de nomes de rio filtrar (opcional; usa coluna rio se existir). pontos Vetor de pontos filtrar (opcional; usa coluna ponto se existir). na_rm Remover NA antes ajuste? (default TRUE)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tendencia temporal por parametro (por rio/ponto se existentes) — param_trend","text":"Tibble com colunas de agrupamento (quando existirem) + slope (por dia), p_value, r2, n.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tendencia temporal por parametro (por rio/ponto se existentes) — param_trend","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") param_trend(wq_demo, \"turbidez\", pontos = c(\"P1\",\"P2\")) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Tendencia para varios parametros (filtro por rio/ponto) — param_trend_multi","title":"Tendencia para varios parametros (filtro por rio/ponto) — param_trend_multi","text":"Itera sobre um vetor de parametros, chamando param_trend() para cada um, e combina saidas em uma unica tabela, acrescentando coluna parametro.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tendencia para varios parametros (filtro por rio/ponto) — param_trend_multi","text":"","code":"param_trend_multi(df, parametros, rios = NULL, pontos = NULL, na_rm = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tendencia para varios parametros (filtro por rio/ponto) — param_trend_multi","text":"df Data frame com data e colunas dos parametros. parametros Vetor de nomes de parametros. rios Vetor de rios (opcional; usa coluna rio se existir). pontos Vetor de pontos (opcional; usa coluna ponto se existir). na_rm Logical; repassado para param_trend().","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tendencia para varios parametros (filtro por rio/ponto) — param_trend_multi","text":"Tibble combinando tendencias de todos os parametros, com coluna parametro.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/param_trend_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tendencia para varios parametros (filtro por rio/ponto) — param_trend_multi","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") param_trend_multi(wq_demo, c(\"turbidez\",\"od\"), pontos = \"P1\") } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplots by site/parameter — plot_box","title":"Boxplots by site/parameter — plot_box","text":"Boxplots one numeric parameter grouped categorical column.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplots by site/parameter — plot_box","text":"","code":"plot_box(df, parametro, by = \"ponto\")"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplots by site/parameter — plot_box","text":"df Data frame water quality data. parametro Character; name numeric parameter column. Character; grouping column (e.g., \"ponto\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplots by site/parameter — plot_box","text":"ggplot object.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplots by site/parameter — plot_box","text":"","code":"# \\donttest{ data(wq_demo) plot_box(wq_demo, \"turbidez\", by = \"ponto\")  # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of parameters vs. sites — plot_heatmap","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"Heatmap long-format data (date x parameter).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"","code":"plot_heatmap(df_long)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"df_long Long-format data frame columns data, parametro, valor.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"ggplot object.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"","code":"# \\donttest{ # Example: reshape wq_demo to long and plot data(wq_demo) library(tidyr) df_long <- tidyr::pivot_longer(   wq_demo,   cols = c(\"ph\",\"od\",\"turbidez\",\"dbo\"),   names_to = \"parametro\",   values_to = \"valor\" ) plot_heatmap(df_long)  # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot IQA by site/date — plot_iqa","title":"Plot IQA by site/date — plot_iqa","text":"Bar plot IQA values per site/date. Requires IQA column.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot IQA by site/date — plot_iqa","text":"","code":"plot_iqa(df)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot IQA by site/date — plot_iqa","text":"df Data frame returned iqa() (equivalent columns).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot IQA by site/date — plot_iqa","text":"ggplot object.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot IQA by site/date — plot_iqa","text":"","code":"# \\donttest{ data(wq_demo) d <- iqa(wq_demo, na_rm = TRUE) plot_iqa(d)  # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Mapa interativo de pontos de coleta — plot_map","title":"Mapa interativo de pontos de coleta — plot_map","text":"Gera um mapa Leaflet com os pontos de coleta que possuam coordenadas de latitude e longitude validas. Mostra informacoes adicionais popup.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mapa interativo de pontos de coleta — plot_map","text":"","code":"plot_map(   data,   popup_cols = NULL,   cluster = TRUE,   color_by = NULL,   tiles = \"OpenStreetMap\" )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mapa interativo de pontos de coleta — plot_map","text":"data Um data.frame contendo colunas de coordenadas. Sao aceitos nomes \"latitude\"/\"longitude\" ou \"lat\"/\"lon\". popup_cols Vetor de colunas exibir popup (ex.: c(\"rio\",\"ponto\",\"data\",\"iqa\")). Se NULL, usa colunas comuns se existirem. cluster Agrupar marcadores proximos (TRUE/FALSE). Default = TRUE. color_by Nome de coluna para colorir os pontos (opcional). Se \"iqa\", aplica classes de qualidade da agua. tiles Provedor de tiles (default = \"OpenStreetMap\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mapa interativo de pontos de coleta — plot_map","text":"Objeto htmlwidget (mapa Leaflet).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mapa interativo de pontos de coleta — plot_map","text":"","code":"df <- data.frame(   rio = c(\"Buranhem\",\"Chamagunga\"),   ponto = c(\"P1\",\"P2\"),   data = as.Date(c(\"2025-09-20\",\"2025-09-21\")),   latitude = c(-16.435, -16.498),   longitude = c(-39.062, -39.080),   iqa = c(72, 58) ) plot_map(df, popup_cols = c(\"rio\",\"ponto\",\"data\",\"iqa\"), color_by = \"iqa\")  {\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",null,null,{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false}]},{\"method\":\"addMarkers\",\"args\":[[-16.435,-16.498],[-39.062,-39.08],null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},{\"1\":\"<b>rio:<\\/b> Buranhem<br><b>ponto:<\\/b> P1<br><b>data:<\\/b> 2025-09-20<br><b>iqa:<\\/b> 72\",\"2\":\"<b>rio:<\\/b> Chamagunga<br><b>ponto:<\\/b> P2<br><b>data:<\\/b> 2025-09-21<br><b>iqa:<\\/b> 58\"},null,{\"showCoverageOnHover\":true,\"zoomToBoundsOnClick\":true,\"spiderfyOnMaxZoom\":true,\"removeOutsideVisibleBounds\":true,\"spiderLegPolylineOptions\":{\"weight\":1.5,\"color\":\"#222\",\"opacity\":0.5},\"freezeAtZoom\":false},null,[\"Buranhem\",\"Chamagunga\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"#21908D\",\"#440154\"],\"labels\":[\"Regular\",\"Bom\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":1,\"position\":\"topright\",\"type\":\"factor\",\"title\":\"IQA\",\"extra\":null,\"layerId\":null,\"className\":\"info legend\",\"group\":null}]}],\"limits\":{\"lat\":[-16.498,-16.435],\"lng\":[-39.08,-39.062]}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series by parameter — plot_series","title":"Time series by parameter — plot_series","text":"Plot time series one numeric parameter, optionally colored/faceted grouping column.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series by parameter — plot_series","text":"","code":"plot_series(df, parametro, facet = NULL)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time series by parameter — plot_series","text":"df Data frame data column (Date/POSIXct) parameter column. parametro Character; name numeric column plot Y. facet Character NULL; optional grouping column name color/facet.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time series by parameter — plot_series","text":"ggplot object.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series by parameter — plot_series","text":"","code":"# \\donttest{ data(wq_demo) # Basic: time series of turbidity p <- plot_series(wq_demo, \"turbidez\") # With color/facet by sampling point p2 <- plot_series(wq_demo, \"turbidez\", facet = \"ponto\") # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"Gera um grafico de series temporais com pontos observados e linhas de tendencia ajustadas. Suporta metodos robustos (Theil-Sen), lineares (OLS) ou suavizados (LOESS). Util para verificar tendencias de parametros ambientais por ponto e/ou rio.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"","code":"plot_trend(   data,   param,   date_col = \"data\",   group_cols = c(\"rio\", \"ponto\"),   method = c(\"theilsen\", \"ols\", \"loess\"),   show_points = TRUE,   min_n = 6 )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"data data.frame. Deve conter ao menos uma coluna de datas e coluna parametro ser analisado. param character. Nome da coluna parametro (ex.: \"turbidez\", \"iqa\"). date_col character. Nome da coluna de datas. Default = \"data\". group_cols character. Vetor com colunas para agrupamento (ex.: c(\"rio\",\"ponto\")). Use \"none\" para nao facetar. Default = c(\"rio\",\"ponto\"). method character. Metodo de ajuste da tendencia: \"theilsen\" (padrao): regressao Theil-Sen (robusta outliers). \"ols\": regressao linear simples (minimos quadrados). \"loess\": curva suavizada, sem inclinacao unica. show_points logical. Mostrar pontos observados? Default = TRUE. min_n integer. Numero minimo de observacoes por grupo para calcular tendencia. Default = 6.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"Objeto ggplot2, que pode ser plotado diretamente.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"funcao desenha pontos e linhas conectando observacoes, alem da linha de tendencia calculada pelo metodo escolhido. Quando group_cols possui mais de uma categoria, os grupos sao facetados. \"theilsen\" e mais robusto valores atipicos que \"ols\". \"loess\" e util quando nao se espera relacao linear tempo.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"","code":"# Exemplo simples: turbidez com tendencia Theil-Sen set.seed(1) df <- data.frame(   data = as.Date(\"2024-01-01\") + 0:11*30,   rio = \"Demo\", ponto = \"P1\",   turbidez = 20 + (-0.3)*(0:11) + rnorm(12, 0, 1) ) plot_trend(df, param = \"turbidez\", method = \"theilsen\")   # Exemplo com multiplos grupos e facetamento (OLS) df2 <- data.frame(   data = rep(seq(as.Date(\"2024-01-01\"), by = \"30 days\", length.out = 12), 2),   rio = rep(c(\"Rio A\",\"Rio B\"), each = 12),   ponto = rep(c(\"P1\",\"P2\"), each = 12),   od = c(7 + rnorm(12, 0, 0.5), 6 + rnorm(12, 0, 0.5)) ) plot_trend(df2, param = \"od\", method = \"ols\")"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/qi_interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpola Qi a partir de uma curva definida por pontos (x, qi) — qi_interp","title":"Interpola Qi a partir de uma curva definida por pontos (x, qi) — qi_interp","text":"Interpola Qi partir de uma curva definida por pontos (x, qi)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/qi_interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpola Qi a partir de uma curva definida por pontos (x, qi) — qi_interp","text":"","code":"qi_interp(x, tbl)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":null,"dir":"Reference","previous_headings":"","what":"Read water-quality CSV (robust parsing) — read_wq","title":"Read water-quality CSV (robust parsing) — read_wq","text":"Reads CSV file comma semicolon delimiter comma dot decimal mark, ignoring unit suffixes (e.g., \"0,04 mg/L\"). Everything read text first, column names normalized, likely numeric columns parsed robustly. conservative safeguard adjusts obviously --range pH values (e.g., 72 -> 7.2).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read water-quality CSV (robust parsing) — read_wq","text":"","code":"read_wq(path, tz = \"America/Bahia\")"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read water-quality CSV (robust parsing) — read_wq","text":"path Path CSV file. tz Time zone dates (kept compatibility; dates Date).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read water-quality CSV (robust parsing) — read_wq","text":"tibble : normalized, lowercase column names (spaces _, non-alnum removed); numeric columns parsed ignoring unit strings; data parsed Date (tries ymd dmy); ponto coerced character (present).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"parsed-numeric-candidates","dir":"Reference","previous_headings":"","what":"Parsed numeric candidates","title":"Read water-quality CSV (robust parsing) — read_wq","text":"c(\"ph\",\"od\",\"turbidez\",\"dbo\",\"coliformes\",\"p_total\",\"ptotal\", \"fosforo_total\",\"temperatura\",\"ec\",\"condutividade\",\"n_nitrato\",\"n_nitrito\", \"amonia\",\"nt_total\",\"n_total\",\"ntk\",\"nkjeldahl\",\"nitrogenio_total\", \"solidos_totais\",\"solidos_suspensos\",\"tds\",\"conducao\",\"qi\",\"iqa\",\"iet\", \"iet_carlson\",\"iet_lamparelli\",\"nsfwqi\",\"vazao\")","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read water-quality CSV (robust parsing) — read_wq","text":"","code":"if (FALSE) { # \\dontrun{ # Minimal example (write a small CSV and read it): tmp <- tempfile(fileext = \".csv\") writeLines(   c(\"ponto;data;ph;od;turbidez\",     \"R1_01;2025-01-20;7,2;6,8;5,1\",     \"R1_01;21/01/2025;7.1;7.0;4.8 mg/L\"),   tmp ) x <- read_wq(tmp) str(x) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a water-quality report from the internal R Markdown template — render_report","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"Renders HTML report using package's internal R Markdown template. default, output written temporary directory comply CRAN policies. function returns (invisibly) full path generated file.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"","code":"render_report(   df,   meta = list(river = NA, period = NA),   output_file = \"wq_report.html\",   output_dir = tempdir(),   template = system.file(\"templates\", \"report_rmd.Rmd\", package = \"tikatuwq\") )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"df Data frame input data used template. meta Named list contextual metadata (e.g., river, period). output_file File name report (default \"wq_report.html\"). output_dir Directory file written (default tempdir()). created exist. template Path internal template file. Defaults package Rmd template shipped inst/templates/report_rmd.Rmd.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"Invisible character string: absolute path generated report.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"template expects data frame columns compatible package (e.g., ponto, data, parameters used IQA/CONAMA checks). can pass optional metadata via meta, river period. function relies rmarkdown (listed Suggests). package available, informative error thrown.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"default output directory tempdir() avoid writing user's project folder examples automated checks. template Rmd (R Markdown). prefer Quarto, provide custom template path .qmd ensure environment supports .","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"","code":"# \\donttest{ # Minimal example (writes to a temporary directory) d <- wq_demo path <- render_report(d, meta = list(river = \"Example River\", period = \"Jan–Feb\")) file.exists(path) #> [1] TRUE # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":null,"dir":"Reference","previous_headings":"","what":"Descriptive summaries by group — resume_wq","title":"Descriptive summaries by group — resume_wq","text":"Computes basic descriptive statistics (mean, median, sd) numeric columns df, grouped one keys.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Descriptive summaries by group — resume_wq","text":"","code":"resume_wq(df, by = c(\"ponto\", \"mes\"), funs = c(\"mean\", \"median\", \"sd\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Descriptive summaries by group — resume_wq","text":"df data frame tibble. Character vector grouping column names (default c(\"ponto\",\"mes\")). names present df ignored. funs Deprecated (kept compatibility; ignored). function always computes mean, median sd na.rm = TRUE.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Descriptive summaries by group — resume_wq","text":"tibble grouping keys one column per statistic/variable, named {var}_{stat} (e.g., od_mean, od_median, od_sd).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Descriptive summaries by group — resume_wq","text":"Grouping columns found df silently dropped. grouping columns remain, error thrown. numeric columns summarized; none exist, error thrown. Missing values ignored (na.rm = TRUE).","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Descriptive summaries by group — resume_wq","text":"","code":"# \\donttest{ # Using the demo dataset shipped with the package d <- wq_demo # Example: group by point (ponto) s1 <- resume_wq(d, by = \"ponto\") head(s1) #> # A tibble: 4 × 28 #>   ponto ph_mean ph_median ph_sd od_mean od_median od_sd turbidez_mean #>   <chr>   <dbl>     <dbl> <dbl>   <dbl>     <dbl> <dbl>         <dbl> #> 1 P1       7.70      7.88 0.731    6.41      6.21  1.73          53.6 #> 2 P2       7.41      7.46 0.672    5.77      5.03  1.43          27.7 #> 3 P3       7.11      7.14 0.236    6.41      5.92  1.54          29.3 #> 4 P4       7.04      6.97 0.284    7.16      8.05  1.27          51.6 #> # ℹ 20 more variables: turbidez_median <dbl>, turbidez_sd <dbl>, #> #   dbo_mean <dbl>, dbo_median <dbl>, dbo_sd <dbl>, coliformes_mean <dbl>, #> #   coliformes_median <int>, coliformes_sd <dbl>, p_total_mean <dbl>, #> #   p_total_median <dbl>, p_total_sd <dbl>, nt_total_mean <dbl>, #> #   nt_total_median <dbl>, nt_total_sd <dbl>, temperatura_mean <dbl>, #> #   temperatura_median <dbl>, temperatura_sd <dbl>, tds_mean <dbl>, #> #   tds_median <dbl>, tds_sd <dbl>  # Example: group by point and month (if 'mes' exists in your data) # s2 <- resume_wq(d, by = c(\"ponto\", \"mes\")) # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"Utilities import, clean, validate analyze freshwater quality data. Includes indices (IQA/WQI, TSI/IET Carlson Lamparelli), compliance checks CONAMA 357/2005, visualizations, rule-based analytical text.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"main-features","dir":"Reference","previous_headings":"","what":"Main features","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"Indices: IQA/WQI; TSI/IET (Carlson, Lamparelli); NSF WQI prototype. Compliance: CONAMA 357/2005 limits per-record status. Visualization: time series, boxplots, heatmap, IQA bars. Reporting: simple Rmd/Quarto report; analytical paragraphs (rule-based).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"quick-start","dir":"Reference","previous_headings":"","what":"Quick start","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"","code":"# demo data data(wq_demo)  # compute IQA d1 <- iqa(wq_demo, na_rm = TRUE)  # check compliance (CONAMA class \"2\") d2 <- conama_check(d1, classe = \"2\")  # summary table (only violations) conama_report(d2, classe = \"2\", only_violations = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"vignettes","dir":"Reference","previous_headings":"","what":"Vignettes","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"See package website walkthroughs examples: tikatuwq website.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"Carlson (1977) doi:10.4319/lo.1977.22.2.0361 Lamparelli (2004) https://www.teses.usp.br/teses/disponiveis/41/41134/tde-20032006-075813/publico/TeseLamparelli2004.pdf NSF WQI https://link.springer.com/article/10.1007/s11157-023-09650-7 CONAMA 357/2005 https://conama.mma.gov.br/?id=450&option=com_sisconama&task=arquivo.download","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"Maintainer: Vinicius Saraiva Santos vinisaraiva@gmail.com (ORCID)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"Calcula inclinacao de Theil-Sen (robusta) e o p-valor teste de correlacao de Spearman entre tempo e o valor parametro. Retorna estatisticas por grupo (ex.: rio, ponto).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"","code":"trend_param(   data,   param,   date_col = \"data\",   group_cols = c(\"rio\", \"ponto\"),   min_n = 6,   alpha = 0.05 )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"data data.frame com pelo menos uma coluna de data e coluna parametro. param nome parametro (string), por exemplo \"turbidez\" ou \"iqa\". date_col nome da coluna de datas. Default: \"data\". group_cols vetor de nomes para agrupar. Default: c(\"rio\",\"ponto\"). min_n amostra minima por grupo. Default: 6. alpha nivel de significancia para classificar tendencia. Default: 0.05.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"data.frame com colunas por grupo e: n, date_min, date_max, days_span, slope_per_year, intercept, rho_spearman, p_value, trend (\"aumento\" / \"queda\" / \"estavel\"), pct_change_period (aprox. % periodo observado).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"","code":"set.seed(1) df <- data.frame(   data = as.Date(\"2024-01-01\") + 0:11*30,   rio = \"Demo\", ponto = \"P1\",   turbidez = 20 + (-0.3)*(0:11) + rnorm(12, 0, 1) ) trend_param(df, param = \"turbidez\") #>    rio ponto    param  n   date_min   date_max days_span slope_per_year #> 1 Demo    P1 turbidez 12 2024-01-01 2024-11-26       330      -2.710707 #>   intercept rho_spearman     p_value trend pct_change_period #> 1  19.98852   -0.7622378 0.003950449 queda         -12.25253"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate presence of required columns — validate_wq","title":"Validate presence of required columns — validate_wq","text":"Ensures minimal set columns exists dataset; otherwise throws error listing missing names.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate presence of required columns — validate_wq","text":"","code":"validate_wq(   df,   required = c(\"ph\", \"turbidez\", \"od\", \"dbo\", \"nt_total\", \"p_total\", \"tds\",     \"temperatura\", \"coliformes\") )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate presence of required columns — validate_wq","text":"df Input data frame / tibble. required Character vector required column names.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate presence of required columns — validate_wq","text":"input df valid; otherwise, error thrown.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate presence of required columns — validate_wq","text":"","code":"df_ex <- data.frame(   ph = 7, turbidez = 2, od = 7, dbo = 3,   nt_total = 0.8, p_total = 0.05, tds = 150,   temperatura = 24, coliformes = 200 ) validate_wq(df_ex) #>   ph turbidez od dbo nt_total p_total tds temperatura coliformes #> 1  7        2  7   3      0.8    0.05 150          24        200"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo water quality dataset — wq_demo","title":"Demo water quality dataset — wq_demo","text":"tiny example dataset used examples vignettes. Column names follow package's Portuguese conventions (e.g., ponto, data, turbidez).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo water quality dataset — wq_demo","text":"","code":"data(wq_demo)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo water quality dataset — wq_demo","text":"data frame (tibble) 20 rows 11 columns: ponto character, monitoring point id data Date, sampling date ph numeric, pH od numeric, dissolved oxygen (mg/L) turbidez numeric, NTU dbo numeric, mg/L coliformes integer, MPN/100 mL p_total numeric, total phosphorus (mg/L) nt_total numeric, total nitrogen (mg/L) temperatura numeric, degrees Celsius tds numeric, total dissolved solids (mg/L)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Demo water quality dataset — wq_demo","text":"Simulated package examples.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Demo water quality dataset — wq_demo","text":"dataset simulated illustrative purposes suitable quick examples iqa(), conama_check(), plotting helpers.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Demo water quality dataset — wq_demo","text":"","code":"data(\"wq_demo\", package = \"tikatuwq\") head(wq_demo) #>   ponto       data   ph   od turbidez  dbo coliformes p_total nt_total #> 1    P1 2024-06-07 7.08 5.33     63.8 5.38        331   0.080     1.30 #> 2    P1 2024-06-27 6.79 8.29     35.7 1.46         98   0.348     3.69 #> 3    P1 2024-01-14 8.43 4.23     60.6 1.22       3712   0.313     4.25 #> 4    P1 2024-07-13 8.30 6.21     50.7 4.09        200   0.447     2.54 #> 5    P1 2024-06-18 7.88 7.99     57.1 2.39         66   0.340     2.00 #> 6    P2 2024-02-19 8.09 4.61      1.0 4.11       3930   0.371     1.31 #>   temperatura tds #> 1        23.0 249 #> 2        21.2 329 #> 3        25.6 480 #> 4        20.2 731 #> 5        28.4 201 #> 6        27.0 724 # quick IQA example: # iqa(wq_demo, na_rm = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-073","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.7.3","title":"tikatuwq 0.7.3","text":"Funções iet_carlson() e iet_lamparelli() agora aceitam data.frame com .keep_ids. Conversão automática de formato BR (“,” / “<” / “>”) e de p_total (mg/L) → tp (µg/L). iqa() mais robusto: alias temp para temperatura, numificação segura e reponderação com na_rm=TRUE. Campos identificadores (rio, ponto, data, lat, lon) agora são automaticamente reconhecidos e preservados via .keep_ids.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-072","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.7.2","title":"tikatuwq 0.7.2","text":"CRAN release: 2025-10-22 Changes version: - Fixed incoming NOTE detected pre-tests: - Removed non-standard fields (DOI, Citation) DESCRIPTION. - Updated inst/CITATION use modern bibentry() format instead deprecated citEntry(). - Minor internal documentation updates (API functional changes).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-071","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.7.1","title":"tikatuwq 0.7.1","text":"Title field adjusted per CRAN request: now “Water Quality Assessment Environmental Compliance Brazil”. Added Zenodo DOI formal citation entry (citation(\"tikatuwq\")). Updated README (EN/PT) citation, DOI badge, institutional context. changes functions internal code.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-070","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.7.0","title":"tikatuwq 0.7.0","text":"Enable detailed analysis specific parameters point, river, group points. Support cross-comparisons (multiple parameters one point multiple points parameter). Include simple temporal trend detection basic statistical summary. Return standardized data frames compatible visualization reporting tools. Automated tests new modules (test-param_analysis.R, test-param_analysis_multi.R). Code updated meet CRAN best practices (checks passed 100% cleanly). Minor stability improvements plot_trend() plot_map() (controlled messages).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-062","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.6.2","title":"tikatuwq 0.6.2","text":"CRAN release: 2025-10-07 Fix: resolved codoc WARNING generate_analysis() (docs matched code). functional code changes.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-061","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.6.1","title":"tikatuwq 0.6.1","text":"Maintenance update requested CRAN. Fixed relative link README-pt.md, now using absolute HTTPS URL. functional changes code.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-060","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.6.0","title":"tikatuwq 0.6.0","text":"Visualize time series parameters (e.g., turbidity, OD, IQA). Theil–Sen (robust outliers), OLS (ordinary least squares), LOESS (smoothed curve). Supports faceting river/point customizable number samples. Returns ggplot object ready plotting. Updated documentation plot_trend() practical examples. Updated pkgdown site dedicated section trend visualization.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-051","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.5.1","title":"tikatuwq 0.5.1","text":"CRAN release: 2025-10-01 Fix: replaced broken URLs help pages.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-050","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.5.0","title":"tikatuwq 0.5.0","text":"New: plot_map() — interactive map sampling points using Leaflet (optional dependency via Suggests). Examples wrapped (interactive()) / \\donttest{} avoid network calls CRAN. Tests: added skip_on_cran() skip_if_not_installed(\"leaflet\") guards map tests. Encoding hardening: replaced non-ASCII characters \\u escapes. Dependencies: removed unused htmltools Imports. Docs: roxygen updates; added function “Visualizations” reference. breaking changes; existing public API unchanged.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-046","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.4.6","title":"tikatuwq 0.4.6","text":"CRAN release: 2025-09-22 DESCRIPTION rewritten English-avoid CRAN “Possibly misspelled words” NOTE. Fixed DESCRIPTION URLs (Lamparelli 2004, CONAMA 357/2005). Updated spell-check list (inst/WORDLIST). Added expanded acronyms DOIs/URLs DESCRIPTION. Documented @return exported functions. Maintained MIT license text (per CRAN policy). Minor internal refactor: conama_limits() now accepts class argument filtering.","code":""}]
