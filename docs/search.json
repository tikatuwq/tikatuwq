[{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"load-package-and-demo-dataset","dir":"Articles","previous_headings":"","what":"Load package and demo dataset","title":"tikatuwq: basic workflow","text":"","code":"library(tikatuwq)  # Try to make wq_demo available even when the package # cannot be temporarily reinstalled during pkgdown build. ok <- FALSE try({   utils::data(\"wq_demo\", package = \"tikatuwq\", envir = environment())   ok <- exists(\"wq_demo\", inherits = FALSE) }, silent = TRUE)  if (!ok) {   # Fallback: read example CSV shipped with the package   csv <- system.file(\"extdata\", \"exemplo_chamagunga.csv\", package = \"tikatuwq\")   if (nzchar(csv)) {     wq_demo <- read_wq(csv)     ok <- TRUE   } }  if (!ok) {   # Last resort: small synthetic dataset (schema-compatible)   set.seed(1)   wq_demo <- data.frame(     data = as.Date(\"2025-01-01\") + 0:9,     rio = \"Demo\",     ponto = paste0(\"P\", seq_len(10)),     turbidez = runif(10, 1, 50),     od = runif(10, 5, 9),     pH = runif(10, 6.5, 8.5),     temperatura = runif(10, 20, 28),     condutividade = runif(10, 50, 300),     stringsAsFactors = FALSE   ) }  # Coerce common numeric columns defensively (some example files may carry strings) num_candidates <- c(   \"turbidez\",\"od\",\"pH\",\"temperatura\",\"condutividade\",   \"dbo\",\"dbo5\",\"nitrato\",\"fosforo\",\"amonia\",   \"coliformes\",\"coliformes_totais\",\"coliformes_termotolerantes\" ) for (nm in intersect(num_candidates, names(wq_demo))) {   suppressWarnings({ wq_demo[[nm]] <- as.numeric(wq_demo[[nm]]) }) }  head(wq_demo) #> # A tibble: 5 × 11 #>   ponto data          ph turbidez    od   dbo nt_total p_total   tds temperatura #>   <dbl> <date>     <dbl>    <dbl> <dbl> <dbl> <chr>    <chr>   <dbl>       <dbl> #> 1     1 2025-07-01    71       35    72    21 0.8      0.05      280          24 #> 2     2 2025-07-01    68       61    62    27 0.9      0.06      320          25 #> 3     3 2025-07-01    74       40    55    38 1.2      0.08      410          26 #> 4     4 2025-07-01    86       92    65    25 0.7      0.04      350          23 #> 5     5 2025-07-01    62      120    48    52 2.0      0.15      700          28 #> # ℹ 1 more variable: coliformes <dbl>"},{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"compute-iqa-and-check-conama-compliance","dir":"Articles","previous_headings":"","what":"Compute IQA and check CONAMA compliance","title":"tikatuwq: basic workflow","text":"","code":"ok_iqa <- TRUE df <- tryCatch({   wq_demo |>     validate_wq() |>     iqa(na_rm = TRUE) }, error = function(e) {   ok_iqa <<- FALSE   message(\"iqa() failed in vignette build: \", conditionMessage(e))   wq_demo |>     validate_wq() })  conf <- tryCatch({   conama_check(df, classe = \"2\") }, error = function(e) {   message(\"conama_check() failed in vignette build: \", conditionMessage(e))   NULL })  if (!is.null(conf)) head(conf) #> # A tibble: 5 × 16 #>   ponto data          ph turbidez    od   dbo nt_total p_total   tds temperatura #>   <dbl> <date>     <dbl>    <dbl> <dbl> <dbl> <chr>    <chr>   <dbl>       <dbl> #> 1     1 2025-07-01    71       35    72    21 0.8      0.05      280          24 #> 2     2 2025-07-01    68       61    62    27 0.9      0.06      320          25 #> 3     3 2025-07-01    74       40    55    38 1.2      0.08      410          26 #> 4     4 2025-07-01    86       92    65    25 0.7      0.04      350          23 #> 5     5 2025-07-01    62      120    48    52 2.0      0.15      700          28 #> # ℹ 6 more variables: coliformes <dbl>, turbidez_ok <lgl>, od_ok <lgl>, #> #   dbo_ok <lgl>, p_total_ok <lgl>, coliformes_ok <lgl>"},{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"summaries-and-plots","dir":"Articles","previous_headings":"","what":"Summaries and plots","title":"tikatuwq: basic workflow","text":"","code":"if (isTRUE(ok_iqa)) {   plot_iqa(df) } conf_long <- tryCatch(conama_summary(df, classe = \"2\"), error = function(e) NULL) if (!is.null(conf_long)) head(conf_long)"},{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"render-a-report-writes-to-a-temporary-directory","dir":"Articles","previous_headings":"","what":"Render a report (writes to a temporary directory)","title":"tikatuwq: basic workflow","text":"","code":"# Avoid running nested rendering during vignette build on CRAN out_file <- render_report(df) out_file"},{"path":"https://tikatuwq.github.io/tikatuwq/articles/tikatuwq.html","id":"interactive-maps-plot_map","dir":"Articles","previous_headings":"","what":"Interactive maps (plot_map)","title":"tikatuwq: basic workflow","text":"","code":"if (eval_interactive) {   # Minimal example dataset with coordinates   df_map <- data.frame(     rio = c(\"Buranhem\",\"Chamagunga\"),     ponto = c(\"P1\",\"P2\"),     data = as.Date(c(\"2025-09-20\",\"2025-09-21\")),     latitude  = c(-16.435, -16.498),     longitude = c(-39.062, -39.080),     iqa = c(72, 58)   )    plot_map(     df_map,     popup_cols = c(\"rio\",\"ponto\",\"data\",\"iqa\"),     color_by = \"iqa\"   ) } if (eval_interactive) {   plot_map(     df_map,     popup_cols = c(\"rio\",\"ponto\",\"data\",\"iqa\"),     cluster = FALSE,     tiles = \"CartoDB.Positron\"   ) }"},{"path":"https://tikatuwq.github.io/tikatuwq/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vinicius Saraiva Santos. Author, maintainer.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Saraiva Santos V (2025). tikatuwq: Water Quality Analysis Tools Brazilian Context. R package version 0.4.3, https://github.com/tikatuwq/tikatuwq.","code":"@Manual{,   title = {tikatuwq: Water Quality Analysis Tools for the Brazilian Context},   author = {Vinicius {Saraiva Santos}},   year = {2025},   note = {R package version 0.4.3},   url = {https://github.com/tikatuwq/tikatuwq}, }"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"tikatu-water-quality-tikatuwq","dir":"","previous_headings":"","what":"Water Quality Analysis Tools for the Brazilian Context","title":"Water Quality Analysis Tools for the Brazilian Context","text":"R package water quality analysis Brazilian context: WQI (IQA), TSI (Carlson/Lamparelli), NSFWQI, CONAMA 357/2005 limits, visualizations, reports, automatic rule-based text generation. 📄 Leia em Português","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"development-installation","dir":"","previous_headings":"","what":"Development Installation","title":"Water Quality Analysis Tools for the Brazilian Context","text":"","code":"install.packages(c(\"devtools\",\"testthat\",\"rmarkdown\",\"ggplot2\",\"dplyr\",\"tidyr\",                    \"readr\",\"lubridate\",\"stringr\",\"glue\",\"scales\",\"broom\",\"purrr\")) devtools::load_all(\"tikatuwq\") devtools::check(\"tikatuwq\")"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"basic-workflow","dir":"","previous_headings":"","what":"Basic Workflow","title":"Water Quality Analysis Tools for the Brazilian Context","text":"","code":"df <- read_wq(system.file(\"extdata\",\"exemplo_chamagunga.csv\", package=\"tikatuwq\")) |>   validate_wq() |>   iqa(na_rm = TRUE)  plot_iqa(df)  # Rule-based analytical text (no AI) pars <- generate_analysis(df, classe_conama = \"2\",                           incluir_tendencia = TRUE,                           parametros_tendencia = c(\"turbidez\",\"od\",\"pH\"),                           contexto = list(river=\"Chamagunga\", period=\"2025-07\")) cat(paste(pars, collapse = \"\\n\\n\"))"},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"news-v062-current","dir":"","previous_headings":"News","what":"News v0.6.2 (current)","title":"Water Quality Analysis Tools for the Brazilian Context","text":"Patch release requested CRAN. Fixed codoc WARNING generate_analysis() documentation. Removed outdated parameters id_cols filter match current function signature. functional code changes made.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"news-v061","dir":"","previous_headings":"News","what":"News v0.6.1","title":"Water Quality Analysis Tools for the Brazilian Context","text":"Maintenance update requested CRAN. Fixed NOTE replacing relative link README-pt.md absolute HTTPS URL. functional code changes made.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"whats-new-in-v060-previous","dir":"","previous_headings":"News","what":"What’s new in v0.6.0 (previous)","title":"Water Quality Analysis Tools for the Brazilian Context","text":"Trend lines parameter/site using Theil-Sen, OLS, LOESS methods. Support faceting river/site point customization. Returns ggplot object, ready visualization inclusion reports. Updated documentation examples pkgdown site.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"v051","dir":"","previous_headings":"News","what":"v0.5.1","title":"Water Quality Analysis Tools for the Brazilian Context","text":"Fixed invalid links reported CRAN (updated URLs added DOIs). Minor adjustments tikatuwq-package.Rd R-devel compatibility.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"v050","dir":"","previous_headings":"News","what":"v0.5.0","title":"Water Quality Analysis Tools for the Brazilian Context","text":"Added internal helpers simplified workflow. New function plot_map() spatial visualization sampling points. Reviewed standardized validation messages.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"v021","dir":"","previous_headings":"News","what":"v0.2.1","title":"Water Quality Analysis Tools for the Brazilian Context","text":"generate_analysis() — automatic rule-based paragraphs. Updated report template including textual analysis. Added structures iet_lamparelli() nsfwqi().","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"github-installation","dir":"","previous_headings":"","what":"GitHub Installation","title":"Water Quality Analysis Tools for the Brazilian Context","text":"","code":"install.packages(\"remotes\")  # or devtools remotes::install_github(\"tikatuwq/tikatuwq\", dependencies = TRUE)  # Stable release (by tag) remotes::install_github(\"tikatuwq/tikatuwq@v0.5.1\", build_vignettes = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"conama-compliance-class-2","dir":"","previous_headings":"GitHub Installation","what":"CONAMA Compliance (class 2)","title":"Water Quality Analysis Tools for the Brazilian Context","text":"","code":"df <- read_wq(system.file(\"extdata\",\"exemplo_chamagunga.csv\", package=\"tikatuwq\"))  # Table with only violations, ready for reports conama_report(df, \"2\", only_violations = TRUE, pretty = TRUE)  # Short textual summary cat(paste(conama_text(df, \"2\", only_violations = TRUE), collapse = \"\\n\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"main-functions","dir":"","previous_headings":"","what":"Main Functions","title":"Water Quality Analysis Tools for the Brazilian Context","text":"read_wq(path) — read water quality data (CSV). validate_wq(df) — validate/normalize columns units. iqa(df, na_rm = TRUE, ...) — Water Quality Index (CETESB/NSF). iet_carlson(df) / iet_lamparelli(df) — Trophic State Index. nsfwqi(df) — NSFWQI (structure ready). conama_limits(classe) — limits CONAMA Resolution 357/2005. conama_check(df, classe) — compliance parameter (*_ok). Visualizations: plot_iqa(), plot_series(), plot_box(), plot_heatmap(), plot_map(). Reports/text: generate_analysis(), render_report(). Example data: system.file(\"extdata\", \"exemplo_chamagunga.csv\", package = \"tikatuwq\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"documentation-and-support","dir":"","previous_headings":"","what":"Documentation and Support","title":"Water Quality Analysis Tools for the Brazilian Context","text":"Website (pkgdown): https://tikatuwq.github.io/tikatuwq/ Issues/suggestions: https://github.com/tikatuwq/tikatuwq/issues Releases: https://github.com/tikatuwq/tikatuwq/releases","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/index.html","id":"how-to-cite","dir":"","previous_headings":"","what":"How to Cite","title":"Water Quality Analysis Tools for the Brazilian Context","text":"","code":"citation(\"tikatuwq\")"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":null,"dir":"","previous_headings":"","what":"Tikatu Water Quality (tikatuwq)","title":"Tikatu Water Quality (tikatuwq)","text":"Pacote R para análises de qualidade da água contexto brasileiro: IQA, IET (Carlson/Lamparelli), NSFWQI, limites CONAMA 357/2005, visualizações, relatório e texto analítico automático (rule-based). 📄 Read English","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"instalação-desenvolvimento","dir":"","previous_headings":"","what":"Instalação (desenvolvimento)","title":"Tikatu Water Quality (tikatuwq)","text":"","code":"install.packages(c(\"devtools\",\"testthat\",\"rmarkdown\",\"ggplot2\",\"dplyr\",\"tidyr\",                    \"readr\",\"lubridate\",\"stringr\",\"glue\",\"scales\",\"broom\",\"purrr\")) devtools::load_all(\"tikatuwq\") devtools::check(\"tikatuwq\")"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"fluxo-básico","dir":"","previous_headings":"","what":"Fluxo básico","title":"Tikatu Water Quality (tikatuwq)","text":"","code":"df <- read_wq(system.file(\"extdata\",\"exemplo_chamagunga.csv\", package=\"tikatuwq\")) |>   validate_wq() |>   iqa(na_rm = TRUE)  plot_iqa(df)  # Texto analítico (sem IA) pars <- generate_analysis(df, classe_conama = \"2\",                           incluir_tendencia = TRUE,                           parametros_tendencia = c(\"turbidez\",\"od\",\"pH\"),                           contexto = list(rio=\"Chamagunga\", periodo=\"2025-07\")) cat(paste(pars, collapse = \"\\n\\n\"))"},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"novidades-v062-atual","dir":"","previous_headings":"Novidades","what":"Novidades v0.6.2 (atual)","title":"Tikatu Water Quality (tikatuwq)","text":"Atualização corretiva solicitada pelo CRAN. Correção WARNING codoc na documentação da função generate_analysis(). Removidos os parâmetros obsoletos id_cols e filter para corresponder à assinatura atual da função. Nenhuma alteração funcional ou de código foi realizada.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"novidades-v061","dir":"","previous_headings":"Novidades","what":"Novidades v0.6.1","title":"Tikatu Water Quality (tikatuwq)","text":"Atualização de manutenção solicitada pelo CRAN. Correção link relativo README-pt.md, agora convertido para URL HTTPS absoluto. Nenhuma alteração funcional ou de código.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"novidades-v060","dir":"","previous_headings":"Novidades","what":"Novidades v0.6.0","title":"Tikatu Water Quality (tikatuwq)","text":"Linhas de tendência por parâmetro/ponto com métodos Theil-Sen, OLS e LOESS. Suporte facetas por rio/ponto e personalização de pontos. Retorna objeto ggplot, pronto para visualização ou inclusão em relatórios. Atualização da documentação e exemplos site pkgdown.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"v051","dir":"","previous_headings":"Novidades","what":"v0.5.1","title":"Tikatu Water Quality (tikatuwq)","text":"Correção de links inválidos reportados pelo CRAN (URLs atualizadas e DOIs incluídos). Ajustes menores na documentação tikatuwq-package.Rd para compatibilidade com o R-devel.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"v050","dir":"","previous_headings":"Novidades","what":"v0.5.0","title":"Tikatu Water Quality (tikatuwq)","text":"Inclusão de helpers internos para simplificação de fluxo. Nova funcionalidade plot_map() para visualização espacial dos pontos de coleta. Revisão e padronização das mensagens de validação.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"v021","dir":"","previous_headings":"Novidades","what":"v0.2.1","title":"Tikatu Water Quality (tikatuwq)","text":"generate_analysis() — parágrafos automáticos (rule-based). Template de relatório atualizado incluindo análise textual. Estruturas para iet_lamparelli() e nsfwqi().","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"instalação-via-github","dir":"","previous_headings":"","what":"Instalação via GitHub","title":"Tikatu Water Quality (tikatuwq)","text":"","code":"install.packages(\"remotes\")  # ou devtools remotes::install_github(\"tikatuwq/tikatuwq\", dependencies = TRUE)  # versão estável (por tag) remotes::install_github(\"tikatuwq/tikatuwq@v0.5.1\", build_vignettes = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"conformidade-conama-classe-2","dir":"","previous_headings":"Instalação via GitHub","what":"Conformidade CONAMA (classe 2)","title":"Tikatu Water Quality (tikatuwq)","text":"","code":"df <- read_wq(system.file(\"extdata\",\"exemplo_chamagunga.csv\", package=\"tikatuwq\"))  # Tabela só com infrações, pronta para laudo conama_report(df, \"2\", only_violations = TRUE, pretty = TRUE)  # Resumo textual curto cat(paste(conama_text(df, \"2\", only_violations = TRUE), collapse = \"\\n\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"principais-funções","dir":"","previous_headings":"","what":"Principais funções","title":"Tikatu Water Quality (tikatuwq)","text":"read_wq(path) — leitura de dados de qualidade da água (CSV). validate_wq(df) — validação/normalização de colunas e unidades. iqa(df, na_rm = TRUE, ...) — IQA (CETESB/NSF). iet_carlson(df) / iet_lamparelli(df) — Índice Estado Trófico. nsfwqi(df) — NSFWQI (estrutura pronta). conama_limits(classe) — limites da Res. CONAMA 357/2005. conama_check(df, classe) — conformidade por parâmetro (*_ok). Visualizações: plot_iqa(), plot_series(), plot_box(), plot_heatmap(), plot_map(). Relatórios/texto: generate_analysis(), render_report(). Dados de exemplo: system.file(\"extdata\", \"exemplo_chamagunga.csv\", package = \"tikatuwq\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"documentação-e-suporte","dir":"","previous_headings":"","what":"Documentação e suporte","title":"Tikatu Water Quality (tikatuwq)","text":"Site (pkgdown): https://tikatuwq.github.io/tikatuwq/ Issues/sugestões: https://github.com/tikatuwq/tikatuwq/issues Releases: https://github.com/tikatuwq/tikatuwq/releases","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/README-pt.html","id":"como-citar","dir":"","previous_headings":"","what":"Como Citar","title":"Tikatu Water Quality (tikatuwq)","text":"","code":"citation(\"tikatuwq\")"},{"path":"https://tikatuwq.github.io/tikatuwq/README_install.html","id":"instalação-via-github","dir":"","previous_headings":"","what":"Instalação via GitHub","title":"NA","text":"Badge (opcional):","code":"install.packages(\"remotes\")  # ou devtools remotes::install_github(\"tikatuwq/tikatuwq\", dependencies = TRUE)  # versão estável (por tag) remotes::install_github(\"tikatuwq/tikatuwq@v0.4.1\", build_vignettes = TRUE) [![R-CMD-check](https://github.com/tikatuwq/tikatuwq/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/tikatuwq/tikatuwq/actions/workflows/R-CMD-check.yaml)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize/standardize units (placeholder) — clean_units","title":"Normalize/standardize units (placeholder) — clean_units","text":"Extension point normalize units (e.g., mg/L, uS/cm). Currently returns df unchanged.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize/standardize units (placeholder) — clean_units","text":"","code":"clean_units(df, units_map = NULL)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize/standardize units (placeholder) — clean_units","text":"df Input data frame / tibble. units_map Optional mapping units.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize/standardize units (placeholder) — clean_units","text":"input df unchanged (placeholder).","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/clean_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize/standardize units (placeholder) — clean_units","text":"","code":"clean_units(data.frame(ph = c(7, 7.2), od = c(6.5, 7.0))) #>    ph  od #> 1 7.0 6.5 #> 2 7.2 7.0"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":null,"dir":"Reference","previous_headings":"","what":"CONAMA conformity check (detailed; default class = ","title":"CONAMA conformity check (detailed; default class = ","text":"parameter present df, adds columns: *_ok (logical), *_status one \"ok\", \"acima_do_maximo\", \"abaixo_do_minimo\", *__lim_min *__lim_max (thresholds used), *__delta (difference relevant limit; >0 max, <0 min, 0 ok). multiple limit rows exist parameter, *_ok TRUE row satisfied; status/lim_min/lim_max/delta, first satisfied row chosen; none satisfy, row smallest absolute violation (min |delta|) used.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CONAMA conformity check (detailed; default class = ","text":"","code":"conama_check(df, classe = \"2\")"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CONAMA conformity check (detailed; default class = ","text":"df tibble/data.frame parameter columns (e.g., ph, turbidez, od, dbo). classe Character class label (e.g., \"especial\", \"1\", \"2\", \"3\", \"4\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CONAMA conformity check (detailed; default class = ","text":"input df additional columns per parameter described.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CONAMA conformity check (detailed; default class = ","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") head(conama_check(wq_demo, classe = \"2\")) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Limits for Brazilian CONAMA 357/2005 — conama_limits","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"Returns parameter limits defined CONAMA Resolution 357/2005 given water-use class.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"","code":"conama_limits(class)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"class Integer character. Target class (e.g., 1, 2, 3, 4 \"special\"), according CONAMA 357/2005.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"tibble/data frame one row per parameter regulatory thresholds. Typical columns: parametro: parameter name (character, normalized snake_case) classe: class label (character) min/max (equivalents): numeric thresholds (may NA) metadata columns present (e.g., unit, criterion)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_limits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Limits for Brazilian CONAMA 357/2005 — conama_limits","text":"","code":"# Class 2 thresholds (first rows) head(conama_limits(2)) #> Error in conama_limits(2): unused argument (2)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":null,"dir":"Reference","previous_headings":"","what":"CONAMA conformity report (table) — conama_report","title":"CONAMA conformity report (table) — conama_report","text":"CONAMA conformity report (table)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CONAMA conformity report (table) — conama_report","text":"","code":"conama_report(   df,   classe = \"2\",   only_violations = TRUE,   pretty = FALSE,   decimal_mark = \",\",   big_mark = \".\" )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CONAMA conformity report (table) — conama_report","text":"df Input data classe CONAMA class label (e.g., \"2\") only_violations TRUE, returns rows status != \"ok\" pretty TRUE, returns formatted numeric columns display decimal_mark Decimal separator (default \",\") big_mark Thousands separator (default \".\")","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CONAMA conformity report (table) — conama_report","text":"tibble. pretty = FALSE: parametro, valor, lim_min, lim_max, status, delta. pretty = TRUE, numeric columns formatted character \"natural\" decimals.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CONAMA conformity report (table) — conama_report","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") conama_report(wq_demo, classe = \"2\", only_violations = TRUE) conama_report(wq_demo, classe = \"2\", only_violations = TRUE, pretty = TRUE) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"CONAMA conformity summary (long format) — conama_summary","title":"CONAMA conformity summary (long format) — conama_summary","text":"CONAMA conformity summary (long format)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CONAMA conformity summary (long format) — conama_summary","text":"","code":"conama_summary(df, classe = \"2\")"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CONAMA conformity summary (long format) — conama_summary","text":"df Input data classe CONAMA class label","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CONAMA conformity summary (long format) — conama_summary","text":"tibble columns: parametro, valor, lim_min, lim_max, status, ok, delta.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CONAMA conformity summary (long format) — conama_summary","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") head(conama_summary(wq_demo, classe = \"2\")) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Text summary of conformity (bulleted, formatted) — conama_text","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"Text summary conformity (bulleted, formatted)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"","code":"conama_text(   df,   classe = \"2\",   only_violations = FALSE,   decimal_mark = \",\",   big_mark = \".\" )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"df Input data classe CONAMA class label only_violations TRUE, list parameters violation decimal_mark Decimal separator (default \",\") big_mark Thousands separator (default \".\")","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"Character vector lines (first line header, rest bullets).","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/conama_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text summary of conformity (bulleted, formatted) — conama_text","text":"","code":"if (FALSE) { # \\dontrun{ data(\"wq_demo\", package = \"tikatuwq\") cat(conama_text(wq_demo, classe = \"2\"), sep = \"\\n\") } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate analytical paragraphs (rule-based) — generate_analysis","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"Produz 3–5 paragrafos curtos, legiveis por humanos, resumindo qualidade da agua partir de IQA/WQI, conformidade com CONAMA 357/2005 e (opcionalmente) tendencias temporais simples. E rule-based (nao usa IA) e aceita metadados opcionais para compor o texto.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"","code":"generate_analysis(   df,   classe_conama = \"2\",   incluir_tendencia = TRUE,   parametros_tendencia = c(\"turbidez\", \"od\", \"pH\"),   contexto = list(rio = NA, periodo = NA, cidade = NA) )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"df Data frame contendo ao menos coluna ponto. Recomenda-se tambem colunas necessarias para checagens CONAMA e para o calculo IQA. classe_conama Character (ex. \"2\"). Classe-alvo para checagem da Resolucao CONAMA 357/2005. incluir_tendencia Logical; se TRUE, calcula tendencias lineares simples ao longo tempo. parametros_tendencia Character vector; nomes dos parametros para testar tendencia temporal. contexto Lista com metadados opcionais (PT/EN), por exemplo list(rio = \"Rio Pardo\", periodo = \"jan–jun/2025\", cidade = \"Lencois\"). chaves aceitas sao rio/river, periodo/period, cidade.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"Vetor character com 3 5 paragrafos analiticos prontos para relatorio.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/generate_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate analytical paragraphs (rule-based) — generate_analysis","text":"","code":"if (FALSE) { # \\dontrun{ library(tikatuwq) data(\"wq_demo\") txt <- generate_analysis(   df = wq_demo,   classe_conama = \"2\",   incluir_tendencia = TRUE,   parametros_tendencia = c(\"turbidez\",\"od\",\"pH\"),   contexto = list(rio = \"Rio Azul\", periodo = \"jan–jun/2025\") ) cat(paste(txt, collapse = \"\\n\\n\")) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":null,"dir":"Reference","previous_headings":"","what":"Trophic State Index (Carlson) — iet_carlson","title":"Trophic State Index (Carlson) — iet_carlson","text":"Computes Carlson's Trophic State Index (TSI/IET) Secchi depth, chlorophyll-, total phosphorus. Returns component scores overall IET row-wise mean available components.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trophic State Index (Carlson) — iet_carlson","text":"","code":"iet_carlson(secchi = NULL, clorofila = NULL, tp = NULL)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trophic State Index (Carlson) — iet_carlson","text":"secchi Numeric vector Secchi depth (m). clorofila Numeric vector chlorophyll-(ug/L). tp Numeric vector total phosphorus (ug/L).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trophic State Index (Carlson) — iet_carlson","text":"data frame columns (applicable): TSI_Secchi — component Secchi depth. TSI_Chla — component chlorophyll-. TSI_TP — component total phosphorus. IET — overall Carlson index (row mean).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trophic State Index (Carlson) — iet_carlson","text":"Implemented component formulas (Carlson 1977): TSI_Secchi = 60 - 14.41 * log10(secchi) TSI_Chla  = 9.81 * log10(clorofila) + 30.6 TSI_TP    = 14.42 * log10(tp) + 4.15 Inputs may contain NA recycled according R rules. overall index IET row mean available components (na.rm = TRUE).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trophic State Index (Carlson) — iet_carlson","text":"Carlson, R. E. (1977). trophic state index lakes. Limnology Oceanography, 22(2), 361–369. doi:10.4319/lo.1977.22.2.0361","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_carlson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trophic State Index (Carlson) — iet_carlson","text":"","code":"# Example data secchi <- c(1.2, 0.8, 0.4)        # m clorofila <- c(5, 12, 30)         # ug/L tp <- c(20, 40, 70)               # ug/L  iet_carlson(secchi = secchi, clorofila = clorofila, tp = tp) #>   TSI_Secchi TSI_Chla   TSI_TP      IET #> 1   58.85900 37.45690 22.91085 39.74225 #> 2   61.39647 41.18677 27.25171 43.27832 #> 3   65.73432 45.09056 30.75631 47.19373  # With only one component iet_carlson(secchi = secchi) #>   TSI_Secchi      IET #> 1   58.85900 58.85900 #> 2   61.39647 61.39647 #> 3   65.73432 65.73432"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":null,"dir":"Reference","previous_headings":"","what":"Trophic State Index (Lamparelli) — iet_lamparelli","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"Computes components Lamparelli trophic state index (TSI/IET) total phosphorus, chlorophyll-, Secchi depth, returns overall Lamparelli index row-wise mean available components.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"","code":"iet_lamparelli(   tp = NULL,   chla = NULL,   sd = NULL,   ambiente = c(\"rio\", \"reservatorio\") )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"tp Numeric total phosphorus (mg/L). chla Numeric chlorophyll-(ug/L). sd Numeric Secchi disk depth (m). ambiente Character, environment type: 'rio' 'reservatorio'.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"data frame columns (applicable): IET_TP — component total phosphorus. IET_Chla — component chlorophyll-. IET_Secchi — component Secchi depth. IET_Lamp — overall Lamparelli index (row mean). ambiente — informed environment label.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"Implemented component formulas (simple skeleton): IET_TP = 10 + 10 * log10(max(tp, 0.001)) IET_Chla = 10 + 10 * log10(max(chla, 0.001)) IET_Secchi = 60 - 14.41 * log10(max(sd, 0.001)) overall IET_Lamp row mean available components (na.rm = TRUE). Inputs recycled standard R vector recycling rules can contain NA. minimal, pragmatic implementation intended quick summaries; practitioners confirm appropriate equations/coefficients specific waterbody type region regulatory use.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"Carlson, R. E. (1977). trophic state index lakes. Limnology Oceanography, 22(2), 361–369. doi:10.4319/lo.1977.22.2.0361 Lamparelli, M. C. (2004). Graus de trofia em corpos d’água Estado de São Paulo. (Tese de Doutorado). Instituto de Biociências, USP.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iet_lamparelli.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trophic State Index (Lamparelli) — iet_lamparelli","text":"","code":"# Vectors (can include NA) tp   <- c(0.02, 0.05, 0.10)        # mg/L chla <- c(5, 12, 30)               # ug/L sd   <- c(1.2, 0.8, 0.4)           # m  iet_lamparelli(tp = tp, chla = chla, sd = sd, ambiente = \"reservatorio\") #>    IET_TP IET_Chla IET_Secchi IET_Lamp     ambiente #> 1 -6.9897 16.98970   58.85900 22.95300 reservatorio #> 2 -3.0103 20.79181   61.39647 26.39266 reservatorio #> 3  0.0000 24.77121   65.73432 30.16851 reservatorio  # With a single component: iet_lamparelli(tp = tp, ambiente = \"rio\") #>    IET_TP IET_Lamp ambiente #> 1 -6.9897  -6.9897      rio #> 2 -3.0103  -3.0103      rio #> 3  0.0000   0.0000      rio"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":null,"dir":"Reference","previous_headings":"","what":"Water Quality Index (WQI / IQA) — iqa","title":"Water Quality Index (WQI / IQA) — iqa","text":"Computes IQA/WQI combining parameter-specific sub-scores (Qi) via weighted mean. Sub-scores obtained piecewise-linear interpolation approximate curves (CETESB/NSF-like).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Water Quality Index (WQI / IQA) — iqa","text":"","code":"iqa(   df,   pesos = c(od = 0.17, coliformes = 0.15, dbo = 0.1, nt_total = 0.1, p_total = 0.1,     turbidez = 0.08, tds = 0.08, pH = 0.12, temperatura = 0.1),   method = c(\"CETESB_approx\"),   na_rm = FALSE )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Water Quality Index (WQI / IQA) — iqa","text":"df Data frame (tibble) required parameter columns. Expected defaults (Portuguese names): od, coliformes, dbo, nt_total, p_total, turbidez, tds, ph (pH), temperatura. pesos Named numeric weights parameter (sum required). Defaults follow CETESB/NSF practice: od = 0.17 coliformes = 0.15 dbo = 0.10 nt_total = 0.10 p_total = 0.10 turbidez = 0.08 tds = 0.08 pH = 0.12 (mapped column ph needed) temperatura = 0.10 method Character scalar; interpolation table set. Currently \"CETESB_approx\". na_rm Logical; FALSE (default), rows containing missing Qi values trigger error. TRUE, IQA computed using available parameters, denominator adjusted sum weights present parameters.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Water Quality Index (WQI / IQA) — iqa","text":"input df added numeric column IQA. attribute \"iqa_method\" set returned data.frame/tibble.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Water Quality Index (WQI / IQA) — iqa","text":"Column name compatibility: interpolation table uses key \"pH\". data uses ph column (lowercase), automatically mapped \"pH\" curve. parameter names used -. Values clipped [0, 100] aggregation.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Water Quality Index (WQI / IQA) — iqa","text":"","code":"# Minimal example using the demo data: d <- wq_demo #> Error: object 'wq_demo' not found d2 <- iqa(d, na_rm = TRUE) #> Error: object 'd' not found head(d2$IQA) #> Error: object 'd2' not found"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa_curve_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabela de curvas Qi (IQA) por parÃƒÂ¢metro (estrutura CETESB/NSF) — iqa_curve_table","title":"Tabela de curvas Qi (IQA) por parÃƒÂ¢metro (estrutura CETESB/NSF) — iqa_curve_table","text":"Tabela de curvas Qi (IQA) por parâmetros (estrutura CETESB/NSF)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/iqa_curve_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabela de curvas Qi (IQA) por parÃƒÂ¢metro (estrutura CETESB/NSF) — iqa_curve_table","text":"","code":"iqa_curve_table(method = c(\"CETESB_approx\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":null,"dir":"Reference","previous_headings":"","what":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"Computes prototype NSF WQI weighted arithmetic mean parameter sub-scores (Qi) using simple piecewise rules. intended quick demonstrations full replication original NSF curves.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"","code":"nsfwqi(   df,   pesos = c(do = 0.17, fc = 0.16, ph = 0.11, bod = 0.11, temp_change = 0.1, po4 = 0.1,     no3 = 0.1, turbidez = 0.08, sst = 0.07),   na_rm = FALSE )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"df Data frame containing columns compatible mapping . pesos Named numeric vector parameter weights. Defaults follow common NSF WQI variant: =.17, fc=.16, ph=.11, bod=.11, temp_change=.10, po4=.10, no3=.10, turbidez=.08, sst=.07. na_rm Logical; allow NA per row rescale weights available parameters (TRUE) error missing inputs (FALSE).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"input df added numeric column NSFWQI.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"function accepts NSF-style column names common Brazilian aliases. mapping tried (present) :  <- od fc  <- coliformes ph  <- pH ph bod <- dbo turbidez stays turbidez sst <- solidos_suspensos po4 <- po4 p_ortofosfato no3 <- no3 n_nitrato temp_change must supplied -(delta T reference) na_rm = TRUE, weights rescaled per row parameters available row. na_rm = FALSE (default), missing required input leads error.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/nsfwqi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NSF Water Quality Index (NSF WQI, prototype) — nsfwqi","text":"","code":"d <- wq_demo #> Error: object 'wq_demo' not found # create minimal aliases so the prototype can run d$do  <- d$od #> Error: object 'd' not found d$fc  <- d$coliformes #> Error: object 'd' not found d$ph  <- d$ph #> Error: object 'd' not found d$bod <- d$dbo #> Error: object 'd' not found # others are missing; use na_rm = TRUE to rescale weights by row out <- nsfwqi(d, na_rm = TRUE) #> Error: object 'd' not found head(out$NSFWQI) #> Error: object 'out' not found"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplots by site/parameter — plot_box","title":"Boxplots by site/parameter — plot_box","text":"Boxplots one numeric parameter grouped categorical column.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplots by site/parameter — plot_box","text":"","code":"plot_box(df, parametro, by = \"ponto\")"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplots by site/parameter — plot_box","text":"df Data frame water quality data. parametro Character; name numeric parameter column. Character; grouping column (e.g., \"ponto\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplots by site/parameter — plot_box","text":"ggplot object.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplots by site/parameter — plot_box","text":"","code":"# \\donttest{ data(wq_demo) #> Warning: data set 'wq_demo' not found plot_box(wq_demo, \"turbidez\", by = \"ponto\") #> Error: object 'wq_demo' not found # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of parameters vs. sites — plot_heatmap","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"Heatmap long-format data (date x parameter).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"","code":"plot_heatmap(df_long)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"df_long Long-format data frame columns data, parametro, valor.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"ggplot object.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of parameters vs. sites — plot_heatmap","text":"","code":"# \\donttest{ # Example: reshape wq_demo to long and plot data(wq_demo) #> Warning: data set 'wq_demo' not found library(tidyr) df_long <- tidyr::pivot_longer(   wq_demo,   cols = c(\"ph\",\"od\",\"turbidez\",\"dbo\"),   names_to = \"parametro\",   values_to = \"valor\" ) #> Error: object 'wq_demo' not found plot_heatmap(df_long) #> Error: object 'df_long' not found # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot IQA by site/date — plot_iqa","title":"Plot IQA by site/date — plot_iqa","text":"Bar plot IQA values per site/date. Requires IQA column.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot IQA by site/date — plot_iqa","text":"","code":"plot_iqa(df)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot IQA by site/date — plot_iqa","text":"df Data frame returned iqa() (equivalent columns).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot IQA by site/date — plot_iqa","text":"ggplot object.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_iqa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot IQA by site/date — plot_iqa","text":"","code":"# \\donttest{ data(wq_demo) #> Warning: data set 'wq_demo' not found d <- iqa(wq_demo, na_rm = TRUE) #> Error: object 'wq_demo' not found plot_iqa(d) #> Error: object 'd' not found # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Mapa interativo de pontos de coleta — plot_map","title":"Mapa interativo de pontos de coleta — plot_map","text":"Gera um mapa Leaflet com os pontos de coleta que possuam coordenadas de latitude e longitude validas. Mostra informacoes adicionais popup.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mapa interativo de pontos de coleta — plot_map","text":"","code":"plot_map(   data,   popup_cols = NULL,   cluster = TRUE,   color_by = NULL,   tiles = \"OpenStreetMap\" )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mapa interativo de pontos de coleta — plot_map","text":"data Um data.frame contendo colunas de coordenadas. Sao aceitos nomes \"latitude\"/\"longitude\" ou \"lat\"/\"lon\". popup_cols Vetor de colunas exibir popup (ex.: c(\"rio\",\"ponto\",\"data\",\"iqa\")). Se NULL, usa colunas comuns se existirem. cluster Agrupar marcadores proximos (TRUE/FALSE). Default = TRUE. color_by Nome de coluna para colorir os pontos (opcional). Se \"iqa\", aplica classes de qualidade da agua. tiles Provedor de tiles (default = \"OpenStreetMap\").","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mapa interativo de pontos de coleta — plot_map","text":"Objeto htmlwidget (mapa Leaflet).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mapa interativo de pontos de coleta — plot_map","text":"","code":"df <- data.frame(   rio = c(\"Buranhem\",\"Chamagunga\"),   ponto = c(\"P1\",\"P2\"),   data = as.Date(c(\"2025-09-20\",\"2025-09-21\")),   latitude = c(-16.435, -16.498),   longitude = c(-39.062, -39.080),   iqa = c(72, 58) ) plot_map(df, popup_cols = c(\"rio\",\"ponto\",\"data\",\"iqa\"), color_by = \"iqa\") #> Error in plot_map(df, popup_cols = c(\"rio\", \"ponto\", \"data\", \"iqa\"), color_by = \"iqa\"): could not find function \"plot_map\""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series by parameter — plot_series","title":"Time series by parameter — plot_series","text":"Plot time series one numeric parameter, optionally colored/faceted grouping column.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series by parameter — plot_series","text":"","code":"plot_series(df, parametro, facet = NULL)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time series by parameter — plot_series","text":"df Data frame data column (Date/POSIXct) parameter column. parametro Character; name numeric column plot Y. facet Character NULL; optional grouping column name color/facet.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time series by parameter — plot_series","text":"ggplot object.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_series.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series by parameter — plot_series","text":"","code":"# \\donttest{ data(wq_demo) #> Warning: data set 'wq_demo' not found # Basic: time series of turbidity p <- plot_series(wq_demo, \"turbidez\") #> Error: object 'wq_demo' not found # With color/facet by sampling point p2 <- plot_series(wq_demo, \"turbidez\", facet = \"ponto\") #> Error: object 'wq_demo' not found # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"Gera um grafico de series temporais com pontos observados e linhas de tendencia ajustadas. Suporta metodos robustos (Theil-Sen), lineares (OLS) ou suavizados (LOESS). Util para verificar tendencias de parametros ambientais por ponto e/ou rio.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"","code":"plot_trend(   data,   param,   date_col = \"data\",   group_cols = c(\"rio\", \"ponto\"),   method = c(\"theilsen\", \"ols\", \"loess\"),   show_points = TRUE,   min_n = 6 )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"data data.frame. Deve conter ao menos uma coluna de datas e coluna parametro ser analisado. param character. Nome da coluna parametro (ex.: \"turbidez\", \"iqa\"). date_col character. Nome da coluna de datas. Default = \"data\". group_cols character. Vetor com colunas para agrupamento (ex.: c(\"rio\",\"ponto\")). Use \"none\" para nao facetar. Default = c(\"rio\",\"ponto\"). method character. Metodo de ajuste da tendencia: \"theilsen\" (padrao): regressao Theil-Sen (robusta outliers). \"ols\": regressao linear simples (minimos quadrados). \"loess\": curva suavizada, sem inclinacao unica. show_points logical. Mostrar pontos observados? Default = TRUE. min_n integer. Numero minimo de observacoes por grupo para calcular tendencia. Default = 6.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"Objeto ggplot2, que pode ser plotado diretamente.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"funcao desenha pontos e linhas conectando observacoes, alem da linha de tendencia calculada pelo metodo escolhido. Quando group_cols possui mais de uma categoria, os grupos sao facetados. \"theilsen\" e mais robusto valores atipicos que \"ols\". \"loess\" e util quando nao se espera relacao linear tempo.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/plot_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linha de tendencia temporal para parametros de qualidade da agua — plot_trend","text":"","code":"# Exemplo simples: turbidez com tendencia Theil-Sen set.seed(1) df <- data.frame(   data = as.Date(\"2024-01-01\") + 0:11*30,   rio = \"Demo\", ponto = \"P1\",   turbidez = 20 + (-0.3)*(0:11) + rnorm(12, 0, 1) ) plot_trend(df, param = \"turbidez\", method = \"theilsen\") #> Error in plot_trend(df, param = \"turbidez\", method = \"theilsen\"): could not find function \"plot_trend\"  # Exemplo com multiplos grupos e facetamento (OLS) df2 <- data.frame(   data = rep(seq(as.Date(\"2024-01-01\"), by = \"30 days\", length.out = 12), 2),   rio = rep(c(\"Rio A\",\"Rio B\"), each = 12),   ponto = rep(c(\"P1\",\"P2\"), each = 12),   od = c(7 + rnorm(12, 0, 0.5), 6 + rnorm(12, 0, 0.5)) ) plot_trend(df2, param = \"od\", method = \"ols\") #> Error in plot_trend(df2, param = \"od\", method = \"ols\"): could not find function \"plot_trend\""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/qi_interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpola Qi a partir de uma curva definida por pontos (x, qi) — qi_interp","title":"Interpola Qi a partir de uma curva definida por pontos (x, qi) — qi_interp","text":"Interpola Qi partir de uma curva definida por pontos (x, qi)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/qi_interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpola Qi a partir de uma curva definida por pontos (x, qi) — qi_interp","text":"","code":"qi_interp(x, tbl)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":null,"dir":"Reference","previous_headings":"","what":"Read water-quality CSV (robust parsing) — read_wq","title":"Read water-quality CSV (robust parsing) — read_wq","text":"Reads CSV file comma semicolon delimiter comma dot decimal mark, ignoring unit suffixes (e.g., \"0,04 mg/L\"). Everything read text first, column names normalized, likely numeric columns parsed robustly. conservative safeguard adjusts obviously --range pH values (e.g., 72 -> 7.2).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read water-quality CSV (robust parsing) — read_wq","text":"","code":"read_wq(path, tz = \"America/Bahia\")"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read water-quality CSV (robust parsing) — read_wq","text":"path Path CSV file. tz Time zone dates (kept compatibility; dates Date).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read water-quality CSV (robust parsing) — read_wq","text":"tibble : normalized, lowercase column names (spaces _, non-alnum removed); numeric columns parsed ignoring unit strings; data parsed Date (tries ymd dmy); ponto coerced character (present).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"parsed-numeric-candidates","dir":"Reference","previous_headings":"","what":"Parsed numeric candidates","title":"Read water-quality CSV (robust parsing) — read_wq","text":"c(\"ph\",\"od\",\"turbidez\",\"dbo\",\"coliformes\",\"p_total\",\"ptotal\", \"fosforo_total\",\"temperatura\",\"ec\",\"condutividade\",\"n_nitrato\",\"n_nitrito\", \"amonia\",\"nt_total\",\"n_total\",\"ntk\",\"nkjeldahl\",\"nitrogenio_total\", \"solidos_totais\",\"solidos_suspensos\",\"tds\",\"conducao\",\"qi\",\"iqa\",\"iet\", \"iet_carlson\",\"iet_lamparelli\",\"nsfwqi\",\"vazao\")","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/read_wq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read water-quality CSV (robust parsing) — read_wq","text":"","code":"if (FALSE) { # \\dontrun{ # Minimal example (write a small CSV and read it): tmp <- tempfile(fileext = \".csv\") writeLines(   c(\"ponto;data;ph;od;turbidez\",     \"R1_01;2025-01-20;7,2;6,8;5,1\",     \"R1_01;21/01/2025;7.1;7.0;4.8 mg/L\"),   tmp ) x <- read_wq(tmp) str(x) } # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a water-quality report from the internal R Markdown template — render_report","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"Renders HTML report using package's internal R Markdown template. default, output written temporary directory comply CRAN policies. function returns (invisibly) full path generated file.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"","code":"render_report(   df,   meta = list(river = NA, period = NA),   output_file = \"wq_report.html\",   output_dir = tempdir(),   template = system.file(\"templates\", \"report_rmd.Rmd\", package = \"tikatuwq\") )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"df Data frame input data used template. meta Named list contextual metadata (e.g., river, period). output_file File name report (default \"wq_report.html\"). output_dir Directory file written (default tempdir()). created exist. template Path internal template file. Defaults package Rmd template shipped inst/templates/report_rmd.Rmd.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"Invisible character string: absolute path generated report.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"template expects data frame columns compatible package (e.g., ponto, data, parameters used IQA/CONAMA checks). can pass optional metadata via meta, river period. function relies rmarkdown (listed Suggests). package available, informative error thrown.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"default output directory tempdir() avoid writing user's project folder examples automated checks. template Rmd (R Markdown). prefer Quarto, provide custom template path .qmd ensure environment supports .","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/render_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render a water-quality report from the internal R Markdown template — render_report","text":"","code":"# \\donttest{ # Minimal example (writes to a temporary directory) d <- wq_demo #> Error: object 'wq_demo' not found path <- render_report(d, meta = list(river = \"Example River\", period = \"Jan–Feb\")) #> Error: object 'd' not found file.exists(path) #> Error: object 'path' not found # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":null,"dir":"Reference","previous_headings":"","what":"Descriptive summaries by group — resume_wq","title":"Descriptive summaries by group — resume_wq","text":"Computes basic descriptive statistics (mean, median, sd) numeric columns df, grouped one keys.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Descriptive summaries by group — resume_wq","text":"","code":"resume_wq(df, by = c(\"ponto\", \"mes\"), funs = c(\"mean\", \"median\", \"sd\"))"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Descriptive summaries by group — resume_wq","text":"df data frame tibble. Character vector grouping column names (default c(\"ponto\",\"mes\")). names present df ignored. funs Deprecated (kept compatibility; ignored). function always computes mean, median sd na.rm = TRUE.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Descriptive summaries by group — resume_wq","text":"tibble grouping keys one column per statistic/variable, named {var}_{stat} (e.g., od_mean, od_median, od_sd).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Descriptive summaries by group — resume_wq","text":"Grouping columns found df silently dropped. grouping columns remain, error thrown. numeric columns summarized; none exist, error thrown. Missing values ignored (na.rm = TRUE).","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/resume_wq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Descriptive summaries by group — resume_wq","text":"","code":"# \\donttest{ # Using the demo dataset shipped with the package d <- wq_demo #> Error: object 'wq_demo' not found # Example: group by point (ponto) s1 <- resume_wq(d, by = \"ponto\") #> Error: object 'd' not found head(s1) #> Error: object 's1' not found  # Example: group by point and month (if 'mes' exists in your data) # s2 <- resume_wq(d, by = c(\"ponto\", \"mes\")) # }"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"Utilities import, clean, validate analyze freshwater quality data. Includes indices (IQA/WQI, TSI/IET Carlson Lamparelli), compliance checks CONAMA 357/2005, visualizations, rule-based analytical text.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"main-features","dir":"Reference","previous_headings":"","what":"Main features","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"Indices: IQA/WQI; TSI/IET (Carlson, Lamparelli); NSF WQI prototype. Compliance: CONAMA 357/2005 limits per-record status. Visualization: time series, boxplots, heatmap, IQA bars. Reporting: simple Rmd/Quarto report; analytical paragraphs (rule-based).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"quick-start","dir":"Reference","previous_headings":"","what":"Quick start","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"","code":"# demo data data(wq_demo)  # compute IQA d1 <- iqa(wq_demo, na_rm = TRUE)  # check compliance (CONAMA class \"2\") d2 <- conama_check(d1, classe = \"2\")  # summary table (only violations) conama_report(d2, classe = \"2\", only_violations = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"vignettes","dir":"Reference","previous_headings":"","what":"Vignettes","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"See package website walkthroughs examples: tikatuwq website.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"Carlson (1977) doi:10.4319/lo.1977.22.2.0361 Lamparelli (2004) https://www.teses.usp.br/teses/disponiveis/41/41134/tde-20032006-075813/publico/TeseLamparelli2004.pdf NSF WQI https://link.springer.com/article/10.1007/s11157-023-09650-7 CONAMA 357/2005 https://conama.mma.gov.br/?id=450&option=com_sisconama&task=arquivo.download","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/tikatuwq-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tikatuwq: Water quality tools for the Brazilian context — tikatuwq-package","text":"Maintainer: Vinicius Saraiva Santos vinisaraiva@gmail.com (ORCID)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"Calcula inclinacao de Theil-Sen (robusta) e o p-valor teste de correlacao de Spearman entre tempo e o valor parametro. Retorna estatisticas por grupo (ex.: rio, ponto).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"","code":"trend_param(   data,   param,   date_col = \"data\",   group_cols = c(\"rio\", \"ponto\"),   min_n = 6,   alpha = 0.05 )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"data data.frame com pelo menos uma coluna de data e coluna parametro. param nome parametro (string), por exemplo \"turbidez\" ou \"iqa\". date_col nome da coluna de datas. Default: \"data\". group_cols vetor de nomes para agrupar. Default: c(\"rio\",\"ponto\"). min_n amostra minima por grupo. Default: 6. alpha nivel de significancia para classificar tendencia. Default: 0.05.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"data.frame com colunas por grupo e: n, date_min, date_max, days_span, slope_per_year, intercept, rho_spearman, p_value, trend (\"aumento\" / \"queda\" / \"estavel\"), pct_change_period (aprox. % periodo observado).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/trend_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tendencia monotona por parametro e ponto (Theil-Sen + Spearman) — trend_param","text":"","code":"set.seed(1) df <- data.frame(   data = as.Date(\"2024-01-01\") + 0:11*30,   rio = \"Demo\", ponto = \"P1\",   turbidez = 20 + (-0.3)*(0:11) + rnorm(12, 0, 1) ) trend_param(df, param = \"turbidez\") #> Error in trend_param(df, param = \"turbidez\"): could not find function \"trend_param\""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate presence of required columns — validate_wq","title":"Validate presence of required columns — validate_wq","text":"Ensures minimal set columns exists dataset; otherwise throws error listing missing names.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate presence of required columns — validate_wq","text":"","code":"validate_wq(   df,   required = c(\"ph\", \"turbidez\", \"od\", \"dbo\", \"nt_total\", \"p_total\", \"tds\",     \"temperatura\", \"coliformes\") )"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate presence of required columns — validate_wq","text":"df Input data frame / tibble. required Character vector required column names.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate presence of required columns — validate_wq","text":"input df valid; otherwise, error thrown.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/validate_wq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate presence of required columns — validate_wq","text":"","code":"df_ex <- data.frame(   ph = 7, turbidez = 2, od = 7, dbo = 3,   nt_total = 0.8, p_total = 0.05, tds = 150,   temperatura = 24, coliformes = 200 ) validate_wq(df_ex) #>   ph turbidez od dbo nt_total p_total tds temperatura coliformes #> 1  7        2  7   3      0.8    0.05 150          24        200"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo water quality dataset — wq_demo","title":"Demo water quality dataset — wq_demo","text":"tiny example dataset used examples vignettes. Column names follow package's Portuguese conventions (e.g., ponto, data, turbidez).","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo water quality dataset — wq_demo","text":"","code":"data(wq_demo)"},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demo water quality dataset — wq_demo","text":"data frame (tibble) 20 rows 11 columns: ponto character, monitoring point id data Date, sampling date ph numeric, pH od numeric, dissolved oxygen (mg/L) turbidez numeric, NTU dbo numeric, mg/L coliformes integer, MPN/100 mL p_total numeric, total phosphorus (mg/L) nt_total numeric, total nitrogen (mg/L) temperatura numeric, degrees Celsius tds numeric, total dissolved solids (mg/L)","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Demo water quality dataset — wq_demo","text":"Simulated package examples.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Demo water quality dataset — wq_demo","text":"dataset simulated illustrative purposes suitable quick examples iqa(), conama_check(), plotting helpers.","code":""},{"path":[]},{"path":"https://tikatuwq.github.io/tikatuwq/reference/wq_demo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Demo water quality dataset — wq_demo","text":"","code":"data(\"wq_demo\", package = \"tikatuwq\") #> Warning: data set 'wq_demo' not found head(wq_demo) #> Error: object 'wq_demo' not found # quick IQA example: # iqa(wq_demo, na_rm = TRUE)"},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-062","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.6.2","title":"tikatuwq 0.6.2","text":"Fix: resolve codoc WARNING generate_analysis (docs matched code). functional code changes.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"novidades-v061-0-6-2","dir":"Changelog","previous_headings":"","what":"Novidades v0.6.1","title":"tikatuwq 0.6.2","text":"Atualização de manutenção solicitada pelo CRAN. Correção link relativo README-pt.md, agora em URL HTTPS absoluto. Nenhuma mudança funcional código.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-060","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.6.0","title":"tikatuwq 0.6.0","text":"Permite visualizar séries temporais de parâmetros (ex.: turbidez, OD, IQA). Theil-Sen (robusto outliers), OLS (regressão linear clássica), LOESS (curva suavizada). Suporte facetas por rio/ponto, personalização de pontos e número mínimo de amostras. Retorna objeto ggplot. Documentação revisada para plot_trend(), incluindo exemplos práticos. Atualização site pkgdown com seção dedicada gráficos de tendência.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-051","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.5.1","title":"tikatuwq 0.5.1","text":"CRAN release: 2025-10-01 Fix: replace/repair broken URLs package help page.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-050-2025-09-30","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.5.0 (2025-09-30)","title":"tikatuwq 0.5.0 (2025-09-30)","text":"New: plot_map() — interactive map sampling points using Leaflet (optional dependency via Suggests). Examples wrapped (interactive()) / \\donttest{} avoid network calls CRAN. Tests: add skip_on_cran() skip_if_not_installed(\"leaflet\") guard map tests. Encoding hardening: replace non-ASCII characters R code strings \\u escapes silence checks. Dependencies: remove unused htmltools Imports (Leaflet remains Suggests). Docs: roxygen update; add function pkgdown “Visualizations” reference. Chore: move non-code markdown files R/ inst/notes/ keep build clean. breaking changes; existing public API unchanged.","code":""},{"path":"https://tikatuwq.github.io/tikatuwq/news/index.html","id":"tikatuwq-046","dir":"Changelog","previous_headings":"","what":"tikatuwq 0.4.6","title":"tikatuwq 0.4.6","text":"CRAN release: 2025-09-22 DESCRIPTION rewritten English-avoid CRAN “Possibly misspelled words” NOTE. Fix DESCRIPTION URLs per CRAN (Lamparelli 2004, CONAMA 357/2005). Spell-check workflow: updated inst/WORDLIST (Portuguese terms & acronyms). Expanded acronyms DESCRIPTION (WQI ↔︎ IQA, TSI ↔︎ IET, CONAMA, NSF). Added references <doi:...> <https:...> DESCRIPTION. conama_limits(): tibble/data frame thresholds. iqa(): tibble IQA scores qualitative class. plot_box(), plot_heatmap(), plot_iqa(), plot_series(): ggplot objects. Kept LICENSE plain MIT text (per CRAN policy). Minor internal refactor: conama_limits() now accepts class argument filtering. Version bump 0.4.6 CRAN submission.","code":""}]
